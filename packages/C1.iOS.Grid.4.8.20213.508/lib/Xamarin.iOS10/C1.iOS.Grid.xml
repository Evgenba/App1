<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.iOS.Grid</name>
    </assembly>
    <members>
        <member name="T:C1.iOS.Grid.CheckListBehavior">
            <summary>
            Customizes <see cref="T:C1.iOS.Grid.FlexGrid"/> to include a checkbox column and display the grid as a check list.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.CheckListBehavior.OnAttachedTo(C1.iOS.Grid.FlexGrid)">
            <summary>
            Called when the behavior is attached to the grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:C1.iOS.Grid.CheckListBehavior.OnDetachingFrom(C1.iOS.Grid.FlexGrid)">
            <summary>
            Called when the behavior is detaching from the grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="P:C1.iOS.Grid.CheckListBehavior.SelectionBinding">
            <summary>
            Gets or sets the binding property to the boolean property of the data item which will hold the selection state.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.DetailProviderRowHeaderCell">
            <summary>
            Visual element that represent the content of the row header of a row when using FlexGridDetailProvider.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.DetailProviderRowHeaderCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.DetailProviderRowHeaderCell"/> class.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.DetailProviderRowHeaderCell.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the UIView object.
            </summary>
            <param name="disposing">If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</param>
            <remarks>
            <para>This Dispose method releases the resources used by the UIView class.</para>
            <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
            <para>Calling the Dispose method when the application is finished using the UIView ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
            <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.DetailProviderRowHeaderCell.IsExpanded">
            <summary>
            Gets or sets whether the details are expanded.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.DetailProviderRowHeaderCell.ExpandedIconTemplate">
            <summary>
            Gets or sets the icon show when the details are expanded.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.DetailProviderRowHeaderCell.CollapsedIconTemplate">
            <summary>
            Gets or sets the icon shown when the details are collapsed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.DetailProviderRowHeaderCell.ExpandedChanged">
            <summary>
            Occurs when the user toggles the details.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.DetailProviderRowHeaderCell.OnExpandedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExpandedChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridRowHeaderColumn">
            <summary>
            Represents a grid column which holds row headers.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRowHeaderColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridRowHeaderColumn"/> class.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridInputEventArgs">
            <summary>
            Event data for input events associated with a range of cells.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridInputEventArgs.#ctor(System.Boolean,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Core.C1TappedEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridInputEventArgs"/> class.
            </summary>
            <param name="cancelable">if set to <c>true</c> the event is cancelable.</param>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="e">The tapped events.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridInputEventArgs.Event">
            <summary>
            Gets the arguments of the underlying input event that raised this event.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridRefreshEventArgs">
            <summary>
            Event data for Refresh event.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRefreshEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridRefreshEventArgs"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRefreshEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the associated event should be canceled.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridSelectionMenuEventArgs">
            <summary>
            Event data for SelectionMenuCustomized event of <see cref="T:C1.iOS.Grid.FlexGrid"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridSelectionMenuEventArgs.#ctor(C1.iOS.Grid.GridSelectionMenu,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridSelectionMenuEventArgs"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridSelectionMenuEventArgs.Menu">
            <summary>
            Gets the menu taht will be displayed.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridBase">
            <summary>
            Control used to display and edit tabular information. 
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridBase"/> class.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridBase"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.CellFactory">
            <summary>
            Gets or sets the factory of cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.MergeManager">
            <summary>
            Gets or sets the merge manager.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.UpdateAnimation">
            <summary>
            Gets an object containing the animation settings that will be applied when updating cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.IsReadOnly">
            <summary>
            Gets or sets a value to determine whether the grid is read-only.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.SelectionMode">
            <summary>
            Gets or sets how the cells or rows are selected.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.HeadersVisibility">
            <summary>
            Gets or sets a value that indicates the visibility of row and column headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.AllowResizing">
            <summary>
            Gets or sets a value that indicates whether users are allowed to resize rows and columns.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.AllowDragging">
            <summary>
            Gets or sets a value that indicates whether users are allowed to move rows and columns to new positions.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.AllowRefreshing">
            <summary>
            Gets or sets a value indicating whether the grid can be refreshed by pulling.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.AllowMerging">
            <summary>
            Gets or sets a value that indicates which parts of the grid support 
            cell merging.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.FrozenRows">
            <summary>
            Gets or sets the number of frozen rows.
            </summary>
            <remarks>Frozen rows do not scroll, but the cells they contain may be selected and edited.</remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.FrozenColumns">
            <summary>
            Gets or sets the number of frozen columns.
            </summary>
            <remarks>Frozen columns do not scroll, but the cells they contain may be selected and edited.</remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.GridLinesVisibility">
            <summary>
            Gets or sets a value that indicates which grid lines separating inner cells are shown.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ColumnHeaderGridLinesVisibility">
            <summary>
            Gets or sets a value that indicates which grid lines separating column header cells are shown.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.RowHeaderGridLinesVisibility">
            <summary>
            Gets or sets a value that indicates which grid lines separating row header cells are shown.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.TopLeftHeaderGridLinesVisibility">
            <summary>
            Gets or sets a value that indicates which grid lines separating top-left header cells are shown.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.BorderColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the border.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.GridLinesColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the lines between cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.HeaderGridLinesColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the lines between 
            row and column header cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.FrozenLinesColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the lines between frozen
            and scrollable areas of the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.GridLinesWidth">
            <summary>
            Gets or sets the width of the lines between cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.IsAnimated">
            <summary>
            Gets or sets whether the control is animated during navigation.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.RowBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint row backgrounds.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.RowTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the text color of rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.RowHeaderBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the row header background.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ColumnHeaderBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the column header background.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.CursorBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the background of cursor cell.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.CursorTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the text of cursor cell.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.SelectionBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the background of selected cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.SelectionTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the selected text.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.SelectionAdornerColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the selection adorner.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.SelectionAdornerBorderColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the selection adorner border.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.TextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the text and glyphs.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ColumnHeaderTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the column header text and glyphs.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.RowHeaderTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the row header text and glyphs.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.EditorBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the background of 
            cells in edit mode.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.EditorTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the foreground of 
            cells in edit mode.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.TopLeftCellBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the background of the 
            cell at the left top corner of the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.RowHeaderSelectedBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint row header background
            for selected cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ColumnHeaderSelectedBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint column header background
            for selected cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.RowHeaderSelectedTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint row header text
            for selected cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ColumnHeaderSelectedTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint column header text
            for selected cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.Font">
            <summary>
            Gets or sets the font applied to normal cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ColumnHeaderFont">
            <summary>
            Gets or sets the font applied to column headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.RowHeaderFont">
            <summary>
            Gets or sets the font applied to row header.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ShowMarquee">
            <summary>
            Gets or sets a value that indicates whether the grid shows an Excel-style
            marquee around the current selection.
            </summary>
            <remarks>
            By default, the marquee is black and two pixels thick. You can customize 
            the appearance of the marquee using the Marquee property.
            </remarks>
            <example>
            The code below shows how you can create a marquee with a thick rounded 
            red border and semi-transparent red interior and use that to highlight
            the selection instead of the regular SelectionBackground
            and CursorBackground properties.
            <code>
            // customize the marquee
            var m = _flex.Marquee;
            m.Stroke = new SolidColorBrush(Colors.Red);
            m.Fill = new SolidColorBrush(Color.FromArgb(0x20, 0xff, 0x80, 0x80));
            m.StrokeThickness = 4;
            m.RadiusX = 3;
            m.RadiusY = 3;
            
            // show the marquee
            _flex.ShowMarquee = true;
            
            // no need to highlight the selection/cursor
            _flex.SelectionBackground = null;
            _flex.CursorBackground = null;
            </code>
            </example>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ShowSelectionMenu">
            <summary>
            Gets or sets a value that indicates whether the grid shows menu
            when select rows or cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.KeyActionTab">
            <summary>
            Gets or sets the action to perform when the Tab key is pressed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.KeyActionEnter">
            <summary>
            Gets or sets the action to perform when the Enter key is pressed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ZoomMode">
            <summary>
            Gets or sets the zoom mode.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.CellTapped">
            <summary>
            Occurs when a cell is tapped.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.CellDoubleTapped">
            <summary>
            Occurs when a cell is double tapped.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.CellLongPressed">
            <summary>
            Occurs when a cell is being held.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.CursorChanging">
            <summary>
            Occurs before the cursor is changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.CursorChanged">
            <summary>
            Occurs after the cursor is changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.SelectionChanging">
            <summary>
            Occurs before selection is changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.SelectionChanged">
            <summary>
            Occurs after selection changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.BeginningEdit">
            <summary>
            Occurs when the edit of a cell is about to start.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.PrepareCellForEdit">
            <summary>
            Occurs when an editor cell is created and before it becomes active.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.CellEditEnding">
            <summary>
            Occurs before the edit of a cell is committed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.CellEditEnded">
            <summary>
            Occurs after the edit of a cell is committed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.ScrollPositionChanged">
            <summary>
            Occurs when scroll position changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.ResizingColumn">
            <summary>
            Occurs when the user starts resizing a column.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.ResizingRow">
            <summary>
            Occurs when the user starts resizing a row.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.ResizedColumn">
            <summary>
            Occurs when the user finishes resizing a column.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.ResizedRow">
            <summary>
            Occurs when the user finishes resizing a row.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.Refreshing">
            <summary>
            Occurs when the user pulls the grid to be refreshed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.CreatingSelectionMenu">
            <summary>
            Occurs when the selection menu is created. This event can be used to customize the displayed menu. 
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCursorChanging(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:CursorChanging" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCursorChanged(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:CursorChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnSelectionChanging(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:SelectionChanging" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnSelectionChanged(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:SelectionChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCellTapped(C1.iOS.Grid.GridInputEventArgs)">
            <summary>
            Called when a cell is tapped.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCellDoubleTapped(C1.iOS.Grid.GridInputEventArgs)">
            <summary>
            Called when a cell is double tapped.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCellLongPressed(C1.iOS.Grid.GridInputEventArgs)">
            <summary>
            Called when a cell is being held.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnBeginningEdit(C1.iOS.Grid.GridCellEditEventArgs)">
            <summary>
            Raises the <see cref="E:BeginningEdit" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridCellEditEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnPrepareCellForEdit(C1.iOS.Grid.GridCellEditEventArgs)">
            <summary>
            Raises the <see cref="E:PrepareCellForEdit" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridCellEditEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCellEditEnding(C1.iOS.Grid.GridCellEditEventArgs)">
            <summary>
            Raises the <see cref="E:CellEditEnding" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridCellEditEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCellEditEnded(C1.iOS.Grid.GridCellEditEventArgs)">
            <summary>
            Raises the <see cref="E:CellEditEnded" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridCellEditEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnScrollPositionChanged(System.EventArgs)">
            <summary>
            Called when the scroll position changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnResizingColumn(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:C1.iOS.Grid.GridBase.ResizingColumn"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnResizingRow(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:C1.iOS.Grid.GridBase.ResizingRow"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnResizedColumn(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:C1.iOS.Grid.GridBase.ResizedColumn"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnResizedRow(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:C1.iOS.Grid.GridBase.ResizedRow"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCreatingSelectionMenu(C1.iOS.Grid.GridSelectionMenuEventArgs)">
            <summary>
            Raises the <see cref="E:CreatingSelectionMenu" /> event giving the opportunity to customize the menu that will be displayed.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridSelectionMenuEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ViewRange">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridCellRange"/> value that indicates the range of cells
            currently visible on the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ScrollPosition">
            <summary>
            Gets or sets the scroll position.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.ScrollIntoView(System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Scrolls the grid to bring a specific cell into view.
            </summary>
            <param name="row">Index of the row to scroll into view.</param>
            <param name="col">Index of the column to scroll into view.</param>
            <param name="padding">The distance in pixels between the range and the viewport border.</param>
            <param name="disableAnimation">if set to <c>true</c> disable animations.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.ScrollIntoView(C1.iOS.Grid.GridCellRange,System.Double,System.Boolean)">
            <summary>
            Scrolls the grid to bring a specified range into view.
            </summary>
            <param name="range">The range to scroll into view.</param>
            <param name="padding">The distance in pixels between the range and the viewport border.</param>
            <param name="disableAnimation">if set to <c>true</c> disable animations.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.ChangeView(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean)">
            <summary>
            Changes the scroll and zoom of the grid to the specified part of the viewport.
            </summary>
            <param name="horizontalOffset">The horizontal offset.</param>
            <param name="verticalOffset">The vertical offset.</param>
            <param name="zoomScale">The zoom scale.</param>
            <param name="disableAnimation">if set to <c>true</c> disable animations.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.ScrollIntoView(C1.iOS.Grid.GridCellsPanelRange,System.Double,System.Boolean)">
            <summary>
            Scrolls the grid to bring a specified range into view.
            </summary>
            <param name="range">The range to scroll into view.</param>
            <param name="padding">The distance in pixels between the range and the viewport border.</param>
            <param name="disableAnimation">if set to <c>true</c> disable animations.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.ScrollAPage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Scroll vertically up/down a page.
            </summary>
            <param name="oldRow">Global row index of old location</param>
            <param name="newRow">Global row index of new location</param>
            <param name="disableAnimation"></param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.UpdateRefreshControl">
            <summary>
            Updates the refresh control.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.CanRefresh">
            <summary>
            Determines whether the grid shows the refresh indicator when pulled.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnRefreshAsync(C1.iOS.Grid.GridRefreshEventArgs)">
            <summary>
            Called when the refresh was pulled.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.Refresh">
            <summary>
            Recreates all the cells.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.Refresh(System.Nullable{C1.iOS.Grid.GridCellType},C1.iOS.Grid.GridCellRange)">
            <summary>
            Refreshes the specified cells.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.Selection">
            <summary>
            Gets or sets the current selection.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.Select(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Selects a given cell and optionally scrolls it into view.
            </summary>
            <param name="row">The row to select.</param>
            <param name="column">The column to select.</param>
            <param name="scrollIntoView">Whether to scroll the new selection into view.</param>
            <param name="hideSelectionAdorners">Whether the selection adorners are hidden.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.Select(C1.iOS.Grid.GridCellRange,System.Boolean,System.Boolean)">
            <summary>
            Selects a given cell and optionally scrolls it into view.
            </summary>
            <param name="range"><see cref="T:C1.iOS.Grid.GridCellRange"/> to select.</param>
            <param name="scrollIntoView">Whether to scroll the new selection into view.</param>
            <param name="hideSelectionAdorners">Whether the selection adorners are hidden.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.SelectAll">
            <summary>
            Selects all the cells.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.GetSelectedState(System.Int32,System.Int32)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridSelectedState"/> value that indicates the selected
            state of the cells in a specified column and row.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.GetSelectedState(C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridSelectedState"/> value that indicates the selected
            state of the cells in a specified range.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.CreateSelectionMenu(C1.iOS.Grid.GridCellRange)">
            <summary>
            Creates the selection menu.
            </summary>
            <param name="range">The range from which the selection menu will be opened.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.CursorRange">
            <summary>
            Gets the <see cref="T:C1.iOS.Grid.GridCellRange"/> that corresponds to the cursor cell.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.SetCursor(System.Int32,System.Int32)">
            <summary>
            Sets the cursor of the grid to the specified row and column.
            </summary>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <returns><c>true</c> if the operation succeeded</returns>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.ActiveEditor">
            <summary>
            Gets the cell editor that is currently active.
            </summary>
            <remarks>
            <para>The most common use for this property is to determine whether the
            grid is currently in edit mode. If the grid is not in edit mode, this 
            property returns null.</para>
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.EditorRange">
            <summary>
            Gets the <see cref="T:C1.iOS.Grid.GridCellRange"/> that corresponds to the cell currently being edited.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.FullEdit">
            <summary>
            Gets a value indicating whether the grid is in full edit mode.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.StartEditing(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Starts editing a specific cell.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <param name="fullEdit">Whether to stay in edit mode when the user presses the cursor keys.</param>
            <param name="focus">Whether to set the focus and select the text in the editor.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.FinishEditing(System.Boolean)">
            <summary>
            Commits or cancels any pending edits and exits edit mode.
            </summary>
            <param name="cancelEdits">if set to <c>true</c> it will cancel the edited value.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.CalculateColumnDropIndex(System.Double,System.Int32)">
            <summary>
            Calculates the drop column index from the <paramref name="position"/> in cells coordinate, taking the <paramref name="currentDropIndex"/> into account.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.CalculateRowDropIndex(System.Double,System.Int32)">
            <summary>
            Calculates the drop row index from the <paramref name="position"/> in cells coordinate, taking the <paramref name="currentDropIndex"/> into account.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.GetClosestColumnEdge(CoreGraphics.CGPoint,System.Double)">
            <summary>
            Gets the closest column edge from the specified <paramref name="position"/>. If not edge is inside the radius it returns -1.
            </summary>
            <param name="position">The position of the pointer.</param>
            <param name="radius">The maximum distance to the edge.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.GetClosestRowEdge(CoreGraphics.CGPoint,System.Double)">
            <summary>
            Gets the closest row edge from the specified <paramref name="position"/>. If not edge is inside the radius it returns -1.
            </summary>
            <param name="position">The position of the pointer.</param>
            <param name="radius">The maximum distance to the edge.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCellTapped(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Core.C1TappedEventArgs)">
            <summary>
            Called when a cell is tapped.
            </summary>
            <param name="cellType">The type of cell</param>
            <param name="range">The range</param>
            <param name="te">The tapped events</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCellDoubleTapped(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Core.C1TappedEventArgs)">
            <summary>
            Called when a cell is double tapped.
            </summary>
            <param name="cellType">The type of cell</param>
            <param name="range">The range</param>
            <param name="te">The tapped events</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnCellLongPressed(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Core.C1TappedEventArgs)">
            <summary>
            Called when a cell is being held.
            </summary>
            <param name="cellType">The type of cell</param>
            <param name="range">The range</param>
            <param name="te">The tapped events</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.ExpandToMergedRanges(C1.iOS.Grid.GridCellsPanelRange)">
            <summary>
            Expands the specified range so the range doesn't clip merged ranges.
            </summary>
            <param name="range">The original range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.Cut">
            <summary>
            Cut the current selection and copy to the clipboard.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.Copy">
            <summary>
            Copy the current selection to the clipboard.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.Paste">
            <summary>
            Pastes the content of the clipboard to the grid.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.GetClipString(C1.iOS.Grid.GridCellsPanelRange)">
            <summary>
            Gets a string that represents the specified range
            </summary>
            <param name="rng">The range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.SetClipString(System.String,C1.iOS.Grid.GridCellsPanelRange)">
            <summary>
            Parses a string into rows and columns and applies the content to a given range.
            </summary>
            <param name="text">Text to parse into the grid.</param>
            <param name="rng">Range where the text will be pasted.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.CutGridContent(C1.iOS.Grid.GridCellsPanelRange)">
            <summary>
            Cut the content according to a given range.
            </summary>
            <param name="rng">Range where the content will be cut.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnIsReadOnlyChanged">
            <summary>
            Called when the property <see cref="P:IsReadOnly"/> changed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.Site">
            <summary>
            IComponent Site
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridBase.Disposed">
            <summary>
            Occurs when the object is disposed.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnDisposing">
            <summary>
            Called when the object is being disposed.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.OnDisposed">
            <summary>
            Called after the object was disposed.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBase.LoadDesignTimeData">
            <summary>
            Loads dummy design time content visible in Storyboard and Android designer
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.HeadersGridLinesVisibility">
            <summary>
            Gets or sets a value that indicates which grid lines separating header cells are shown.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBase.DefaultColumnHeadersRowHeight">
            <summary>
            Gets or sets the default height of the rows used to display column headers.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridSelectionMode">
            <summary>
            Specifies constants that define the selection behavior.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectionMode.None">
            <summary>
            Selection is not available.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectionMode.Cell">
            <summary>
            Selection corresponds to a single cell.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectionMode.CellRange">
            <summary>
            Selection corresponds to a cell range.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectionMode.Row">
            <summary>
            Selection corresponds to a single row.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectionMode.RowRange">
            <summary>
            Selection corresponds to a set of contiguous rows.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectionMode.Column">
            <summary>
            Selection corresponds to a single column.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectionMode.ColumnRange">
            <summary>
            Selection corresponds to a set of contiguous columns.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridSelectedState">
            <summary>
            Specifies the selected state of a cell.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectedState.None">
            <summary>
            Cell is not selected.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSelectedState.Selected">
            <summary>
            Cell is selected.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridHeadersVisibility">
            <summary>
            Specifies constants that define which header cells are displayed.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridHeadersVisibility.None">
            <summary>
            No header cells are displayed.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridHeadersVisibility.Column">
            <summary>
            Only column header cells are displayed.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridHeadersVisibility.Row">
            <summary>
            Only row header cells are displayed.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridHeadersVisibility.All">
            <summary>
            Both column and row header cells are displayed.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridLinesVisibility">
            <summary>
            Specifies constants that define which grid lines separating grid cells are shown.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridLinesVisibility.None">
            <summary>
            No grid lines are shown.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridLinesVisibility.Horizontal">
            <summary>
            Only horizontal grid lines, which separate rows, are shown.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridLinesVisibility.Vertical">
            <summary>
            Only vertical grid lines, which separate columns, are shown.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridLinesVisibility.All">
            <summary>
            Both horizontal and vertical grid lines are shown.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridCellType">
            <summary>
            Specifies a value that defines the type of cell.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellType.Cell">
            <summary>
            Regular data cell.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellType.ColumnHeader">
            <summary>
            Column header cell.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellType.RowHeader">
            <summary>
            Row header cell.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellType.TopLeft">
            <summary>
            Top left cell (at the intersection of the row and column header cells).
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridAllowResizing">
            <summary>
            Specifies a value that defines which elements can be resized.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowResizing.None">
            <summary>
            No grid elements can be resized.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowResizing.Columns">
            <summary>
            User can resize columns.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowResizing.Rows">
            <summary>
            User can resize rows.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowResizing.Both">
            <summary>
            User can resize rows and columns.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridAllowMerging">
            <summary>
            Specifies constants that define which areas of the grid support cell merging.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowMerging.None">
            <summary>
            No merging.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowMerging.Cells">
            <summary>
            Merge scrollable cells.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowMerging.ColumnHeaders">
            <summary>
            Merge column headers.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowMerging.RowHeaders">
            <summary>
            Merge row headers.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowMerging.AllHeaders">
            <summary>
            Merge column and row headers.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowMerging.All">
            <summary>
            Merge all areas.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridZoomMode">
            <summary>
            Defines constants that specify the current mode for zoom behavior.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridZoomMode.Disabled">
            <summary>
            Zoom of content is disabled.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridZoomMode.Enabled">
            <summary>
            Zoom of content is enabled.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridAllowDragging">
            <summary>
            Defines constants that specify which grid elements can be moved to new positions with drag.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowDragging.None">
            <summary>
            No grid elements can be moved with drag.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowDragging.Columns">
            <summary>
            User can drag columns to new positions.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowDragging.Rows">
            <summary>
            User can drag rows to new positions.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAllowDragging.Both">
            <summary>
            User can drag both columns and rows to new positions.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridTabAction">
            <summary>
            Defines constants that specify which action to perform when Tab key is pressed.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridTabAction.None">
            <summary>
            No special action.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridTabAction.Cycle">
            <summary>
            Move the selection to the next column, then wrap to the next row, then out of the control.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridEnterAction">
            <summary>
            Defines constants that specify which action to perform when Enter key is pressed.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridEnterAction.None">
            <summary>
            No special action.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridEnterAction.MoveDown">
            <summary>
            Move the selection to the next row.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridUpdateAnimation">
            <summary>
            Settings of the animations performed when cells are updated.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.EmptyGridBehavior">
            <summary>
            Displays a visual element, typically a label with a message, when there are no rows in the grid.
            </summary>
            <remarks>
            Sets the property IsVisible of <see cref="P:C1.iOS.Grid.EmptyGridBehavior.EmptyView"/> and the attached grid so that the empty view is displayed when there are no rows in the grid.
            </remarks>
        </member>
        <member name="M:C1.iOS.Grid.EmptyGridBehavior.OnAttachedTo(C1.iOS.Grid.FlexGrid)">
            <summary>
            Called when the behavior is attached to the grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:C1.iOS.Grid.EmptyGridBehavior.OnDetachingFrom(C1.iOS.Grid.FlexGrid)">
            <summary>
            Called when the behavior is detaching from the grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="P:C1.iOS.Grid.EmptyGridBehavior.EmptyView">
            <summary>
            Gets or sets the empty view that will be shown when there are no rows in the grid.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.FlexGridDetailProvider">
            <summary>
            Implements detail rows for <see cref="T:C1.iOS.Grid.FlexGrid"/> control.
            </summary>
            <remarks>To add detail rows to a <see cref="T:C1.iOS.Grid.FlexGrid"/> control, create an instance of a <see cref="T:C1.iOS.Grid.FlexGridDetailProvider`1"/> and add it to the Behaviors property collection, then set RowDetailTemplate or handle DetailCellCreating to provide the details.</remarks>
        </member>
        <member name="T:C1.iOS.Grid.FlexGridDetailProvider`1">
            <summary>
            Implements detail rows for <see cref="T:C1.iOS.Grid.FlexGrid"/> control.
            </summary>
            <remarks>To add detail rows to a <see cref="T:C1.iOS.Grid.FlexGrid"/> control, create an instance of a <see cref="T:C1.iOS.Grid.FlexGridDetailProvider`1"/> and add it to the Behaviors property collection, then set RowDetailTemplate or handle <see cref="E:C1.iOS.Grid.FlexGridDetailProvider`1.DetailCellCreating"/> to provide the details.</remarks>
        </member>
        <member name="M:C1.iOS.Grid.FlexGridDetailProvider`1.OnAttachedTo(C1.iOS.Grid.FlexGrid)">
            <summary>
            Called when the behavior is attached to the grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGridDetailProvider`1.OnDetachingFrom(C1.iOS.Grid.FlexGrid)">
            <summary>
            Called when the behavior is detaching from the grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="P:C1.iOS.Grid.FlexGridDetailProvider`1.Height">
            <summary>
            Gets or sets the height of the details.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGridDetailProvider`1.DetailVisibilityMode">
            <summary>
            Gets or sets the detail visibility mode.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGridDetailProvider`1.ShowExpandButton">
            <summary>
            Gets or sets whether to show the expand/collapse buttons in the row headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate">
            <summary>
            Gets or sets the template used to create the icon displayed when the detail row is expanded.
            </summary>
            <remarks>
            When this property is null, the <see cref="P:C1.iOS.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate"/> icon template will be mirrored horizontally.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGridDetailProvider`1.DetailCollapsedIconTemplate">
            <summary>
            Gets or sets the template used to create the icon displayed when the detail row is collapsed.
            </summary>
            <remarks>
            When this property is null, the <see cref="P:C1.iOS.Grid.FlexGridDetailProvider`1.DetailExpandedIconTemplate"/> icon template will be mirrored horizontally.
            </remarks>
        </member>
        <member name="E:C1.iOS.Grid.FlexGridDetailProvider`1.DetailCellCreating">
            <summary>
            Occurs when the detail cell is being created.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.FlexGridDetailProvider`1.OnDetailCellCreating(C1.iOS.Grid.GridDetailCellCreatingEventArgs)">
            <summary>
            Raises the <see cref="E:DetailCellCreating" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridDetailCellCreatingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:C1.iOS.Grid.FlexGridDetailProvider`1.DetailLoading">
            <summary>
            Occurs when the detail cell is being created.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.FlexGridDetailProvider`1.OnDetailLoading(C1.iOS.Grid.GridDetailLoadingEventArgs{`0})">
            <summary>
            Raises the <see cref="E:DetailLoading" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridDetailLoadingEventArgs`1"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGridDetailProvider`1.HideDetailAsync(System.Int32)">
            <summary>
            Hides the detail row.
            </summary>
            <param name="index">The index of the original row.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGridDetailProvider`1.ShowDetailAsync(System.Int32)">
            <summary>
            Shows the detail row.
            </summary>
            <param name="index">The index of the original row.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGridDetailProvider`1.IsDetailVisible(System.Int32)">
            <summary>
            Determines whether the detail row is visible.
            </summary>
            <param name="index">The index of the original row.</param>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridDetailVisibilityMode">
            <summary>
            Determines how the visibility will behave.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridDetailVisibilityMode.ExpandSingle">
            <summary>
            At most one row detail will be visible at the same time.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridDetailVisibilityMode.ExpandMultiple">
            <summary>
            Multiple row details can be visible at the same time.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridDetailVisibilityMode.Selection">
            <summary>
            The details are expanded and collapsed as the selection changes.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridDetailRow`1">
            <summary>
            Row that shows the details of the previous row.
            </summary>
            <seealso cref="T:C1.iOS.Grid.GridRow" />
        </member>
        <member name="M:C1.iOS.Grid.GridDetailRow`1.#ctor(C1.iOS.Grid.FlexGridDetailProvider{`0},C1.iOS.Grid.GridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridDetailRow`1"/> class.
            </summary>
            <param name="provider">The provider.</param>
            <param name="parentRow">The associated row.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridDetailRow`1.ParentRow">
            <summary>
            Gets the parent row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridDetailRow`1.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridDetailRow`1.GetCellContentType(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the type of the cell content.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="col">The col.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridDetailRow`1.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn,System.Object)">
            <summary>
            Creates the content of the cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="col">The col.</param>
            <param name="cellContentType">Type of the cell content.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridDetailRow`1.BindCellContent(UIKit.UIView,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Binds the content of the cell.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="cellType">Type of the cell.</param>
            <param name="col">The col.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridDetailRow`1.GetMergedRange(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridCellRange" /> that specifies the merged extent of a cell.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="range">The original cell range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridDetailRow`1.GetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the value corresponding to the cell in the intersection of the specified column and this row.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="column">The column that determines the cell.</param>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridDetailCellCreatingEventArgs">
            <summary>
            Provides event data for <see cref="E:C1.iOS.Grid.FlexGridDetailProvider`1.DetailCellCreating"/> event.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridDetailCellCreatingEventArgs.Row">
            <summary>
            Gets the row associated to this details row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridDetailCellCreatingEventArgs.Content">
            <summary>
            Gets or sets the visual element displayed as the row details.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridDetailLoadingEventArgs`1">
            <summary>
            Provides event data for <see cref="E:C1.iOS.Grid.FlexGridDetailProvider`1.DetailLoading"/> event.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridDetailLoadingEventArgs`1.ParentRow">
            <summary>
            Gets the parent row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridDetailLoadingEventArgs`1.DetailRow">
            <summary>
            Gets the detail row it is being loaded.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.FullTextFilterBehavior">
            <summary>
            Allows any <see cref="T:C1.iOS.Grid.FlexGrid"/> to be filtered using a <see cref="T:UIKit.UITextField"/>.
            </summary>
            <remarks>
            This behavior sets the CellFactory of the attached grid.
            </remarks>
        </member>
        <member name="M:C1.iOS.Grid.FullTextFilterBehavior.OnAttachedTo(C1.iOS.Grid.FlexGrid)">
            <summary>
            Called when the behavior is attached to the grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:C1.iOS.Grid.FullTextFilterBehavior.OnDetachingFrom(C1.iOS.Grid.FlexGrid)">
            <summary>
            Called when the behavior is detaching from the grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="P:C1.iOS.Grid.FullTextFilterBehavior.FilterEntry">
            <summary>
            Gets or sets the Entry field used to perform the query.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FullTextFilterBehavior.Mode">
            <summary>
            Gets or sets the mode the filter will be performed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FullTextFilterBehavior.TreatSpacesAsAndOperator">
            <summary>
            Specifies whether the spaces act as "AND" operator or the query should be matched as it is, including spaces.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FullTextFilterBehavior.MatchNumbers">
            <summary>
            Gets or sets whether number columns should be taken into account.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FullTextFilterBehavior.MatchCase">
            <summary>
            Gets or sets whether the filtered text should match the case too.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FullTextFilterBehavior.MatchWholeWord">
            <summary>
            Gets or sets whether the filtered text should match the whole word.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FullTextFilterBehavior.HighlightColor">
            <summary>
            Gets or sets the color used to highlight the matches.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FullTextFilterBehavior.HighlightFontAttributes">
            <summary>
            Gets or sets the font attributes used to highlight the matches.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.FullTextFilterMode">
            <summary>
            Specifies the modes to perform the filter operation.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.FullTextFilterMode.WhileTyping">
            <summary>
            The filter will be applied while the user typing in the <see cref="T:UIKit.UITextField"/>.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.FullTextFilterMode.WhenCompleted">
            <summary>
            The filter will be applied when the user presses the OK button.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridColumnHeaderCell">
            <summary>
            Visual column header
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridColumnHeaderCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridColumnHeaderCell"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.IsDisposed">
            <summary>
            Indicates whether the <see cref="M:C1.iOS.Grid.GridColumnHeaderCell.Dispose(System.Boolean)"/> method was called.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridColumnHeaderCell.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the UIView object.
            </summary>
            <param name="disposing">If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</param>
            <remarks>
            <para>This Dispose method releases the resources used by the UIView class.</para>
            <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
            <para>Calling the Dispose method when the application is finished using the UIView ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
            <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.Title">
            <summary>
            Gets or sets the title of the column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.TitlePadding">
            <summary>
            Gets or sets the padding of the title of the column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.TitleAlignment">
            <summary>
            Gets or sets the alignment of the title inside the cell.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.TitleColor">
            <summary>
            Gets or sets the color of the title.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.TitleFont">
            <summary>
            Gets or sets the title font.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.SortState">
            <summary>
            Gets or sets the sort state.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.SortColor">
            <summary>
            Gets or sets the color of the sort glyph.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.SortAscendingIconTemplate">
            <summary>
            Gets or sets the sort ascending icon template.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.SortDescendingIconTemplate">
            <summary>
            Gets or sets the sort descending icon template.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.SortIconPosition">
            <summary>
            Gets or sets the sort icon position.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.MaxOutline">
            <summary>
            Gets or sets the number of outlines.
            </summary>
            <remarks>-1 means no outlines.</remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.OutlineColor">
            <summary>
            Gets or sets the color of the outline.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.OutlineBorderColor">
            <summary>
            Gets or sets the color of the outline border.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnHeaderCell.OutlineBorderWidth">
            <summary>
            Gets or sets the width of the outline border.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridColumnHeaderCell.OutlineTapped">
            <summary>
            Occurs when any of the outlines is tapped.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridColumnHeaderCell.OnOutlineTapped(C1.iOS.Grid.GridOutlineEventArgs)">
            <summary>
            Raises the <see cref="E:OutlineTapped" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridOutlineEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridGroupRowCell">
            <summary>
            Visual element displayed in the group rows to allow the user expand and collapse as well as displaying the name of the group.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRowCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridGroupRowCell"/> class.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRowCell.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the UIView object.
            </summary>
            <param name="disposing">If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</param>
            <remarks>
            <para>This Dispose method releases the resources used by the UIView class.</para>
            <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
            <para>Calling the Dispose method when the application is finished using the UIView ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
            <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRowCell.GroupText">
            <summary>
            Gets or sets the group text.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRowCell.GroupTextColor">
            <summary>
            Gets or sets the color of the group text.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRowCell.ExpandDown">
            <summary>
            Gets or sets a value indicating whether the group is expanded downwards.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRowCell.GroupExpandedIconTemplate">
            <summary>
            Gets or sets the template used to create the icon displayed when the group is expanded.
            </summary>
            <remarks>
            When the group expand up, because <see cref="P:C1.iOS.Grid.FlexGrid.GroupRowPosition"/> was set in the grid, this icon will be mirrored horizontally.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRowCell.GroupCollapsedIconTemplate">
            <summary>
            Gets or sets the template used to create the icon displayed when the group is collapsed.
            </summary>
            <remarks>
            If this icon template is not specified, the icon will be created by rotating <see cref="P:C1.iOS.Grid.GridGroupRowCell.GroupExpandedIconTemplate"/> 90º counterclockwise.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRowCell.IsCollapsed">
            <summary>
            Gets or sets whether the group is collapsed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRowCell.GroupFont">
            <summary>
            Gets or sets the group font.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridGroupRowCell.IsCollapsedChanged">
            <summary>
            Occurs when the group is toggled.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRowCell.OnIsCollapsedChanged(System.EventArgs)">
            <summary>
            Called when the group is toggled.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridIncrementalLoadingCell">
            <summary>
            Visual element displayed inside a <see cref="T:C1.iOS.Grid.GridIncrementalLoadingRow"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridIncrementalLoadingCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridIncrementalLoadingCell"/> class.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridIncrementalLoadingCell.LoadMoreItems">
            <summary>
            Occurs when the more items are needed.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridIncrementalLoadingCell.SetBound(System.Boolean)">
            <summary>
            Set whether the cell is bound.
            </summary>
            <param name="bound">if set to <c>true</c> the cell is bound.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridIncrementalLoadingCell.SetLoading(System.Boolean)">
            <summary>
            Set whether the loading indicator is shown.
            </summary>
            <param name="loading">if set to <c>true</c> the loading indicator is shown.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridColumnCollection">
            <summary>
            Collection of columns.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumnCollection.Item(System.String)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridColumn"/> by its name.
            </summary>
            <param name="columnName">Name of the column to retrieve.</param>
            <returns>The column with the requested name.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridColumnCollection.IndexOf(System.String)">
            <summary>
            Gets the index of the column with a given name in the collection.
            </summary>
            <param name="colName"><see cref="P:C1.iOS.Grid.GridColumn.Header"/> or <see cref="P:C1.iOS.Grid.GridColumn.Binding"/> to look for.</param>
            <returns>The index of the column, or -1 if the collection does not contain 
            any columns with the given name.</returns>
        </member>
        <member name="T:C1.iOS.Grid.GridRowColCollection`1">
            <summary>
            Base collection class for columns and rows.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridRowColCollection`1" /> class.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridRowColCollection`1.PropertyChanged">
            <summary>
            Called when a property changed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.MinSize">
            <summary>
            Gets or sets the minimum size for the items in the collection.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.MaxSize">
            <summary>
            Gets or sets the maximum size for the items in the collection.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.DefaultSize">
            <summary>
            Gets or sets the default size for the items in the collection.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.IsFixedSize">
            <summary>
            Gets whether the collection size can change.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList"/>.</param>
            <returns>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList"/>.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList"/>.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item">item</paramref> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item">item</paramref> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item">item</paramref> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"/> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList"/>.</param>
            <returns>true if the System.Object is found in the <see cref="T:System.Collections.IList"/>; otherwise, false.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList"/>.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at the <paramref name="from"/> position to <paramref name="to"/>.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridRowColCollection`1.ItemPropertyChanging">
            <summary>
            Occurs before a property of a column changes.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridRowColCollection`1.ItemPropertyChanged">
            <summary>
            Occurs when a property of a column changes.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridRowColCollection`1.CollectionChanging">
            <summary>
            Occurs before the collection changes.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridRowColCollection`1.CollectionChanged">
            <summary>
            Occurs after the items in the collection changed.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:CollectionChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColCollection`1.DisableAnimations">
            <summary>
            Disable the animations caused by the operations that are performed inside the using block of the returned IDisposable.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridRowCol">
            <summary>
            Abstract base class for <see cref="T:C1.iOS.Grid.GridRow"/> and <see cref="T:C1.iOS.Grid.GridColumn"/> classes.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowCol.Index">
            <summary>
            Gets the index of the row inside the collection of rows of the associated <see cref="T:C1.iOS.Grid.FlexGrid"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRowCol.OnPropertyChanging(System.String)">
            <summary>
            Called before a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRowCol.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="E:C1.iOS.Grid.GridRowCol.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridRowCol.PropertyChanging">
            <summary>
            Occurs before a property value changes.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowCol.IsAutoGenerated">
            <summary>
            Gets a value indicating whether this column or row was generated from source.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridRowCollection">
            <summary>
            Collection of rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowCollection.DefaultGroupSize">
            <summary>
            Gets or sets the default group row height.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridContentRowCollection">
            <summary>
            Collection of rows which contains rows coming from a data source.
            </summary>
            <seealso cref="T:C1.iOS.Grid.GridRowCollection" />
        </member>
        <member name="M:C1.iOS.Grid.GridContentRowCollection.#ctor(C1.iOS.Grid.FlexGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridContentRowCollection"/> class.
            </summary>
            <param name="grid">The source.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridColumn">
            <summary>
            Represents a grid column.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridColumn"/> class.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridColumn"/> class.
            </summary>
            <param name="property">The property info object used to initialize the column.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.Grid">
            <summary>
            Gets the grid containing this column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.Columns">
            <summary>
            Gets the columns collection containing this column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.ColumnName">
            <summary>
            Gets or sets a value used as an identifier for the column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> used to paint the background
            of cells in this column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.TextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> used to paint the foreground
            of cells in this column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.HeaderBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> used to paint the background
            of header cells in this column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.HeaderTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> used to paint the foreground
            of header cells in this column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.Header">
            <summary>
            Gets or sets text shown in the header of this column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.Format">
            <summary>
            Gets or sets the format applied to the displayed data.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether this column is read only. 
            If the grid is set to be read-only this property will be ignored.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.IsVisible">
            <summary>
            Gets or sets a value indicating whether the column is visible and not collapsed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.AllowSorting">
            <summary>
            Gets or sets a value that indicates whether the user can sort this column by tapping the column header.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.SortMemberPath">
            <summary>
            Gets or sets the path used to sort when the column header of this column is tapped.
            </summary>
            <remarks>
            If no <see cref="P:C1.iOS.Grid.GridColumn.SortMemberPath"/> is specified, the <see cref="P:C1.iOS.Grid.GridColumn.Binding"/> property will be used.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.MinWidth">
            <summary>
            Gets or sets the minimum width of the column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.MaxWidth">
            <summary>
            Gets or sets the maximum width of the column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.HeaderHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the header.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.AllowMerging">
            <summary>
            Gets or sets a value that indicates whether cells in this column can be merged.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.InputType">
            <summary>
            Gets or sets the type of keyboard shown when the cell is in edit-mode.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.Aggregate">
            <summary>
            Gets or sets the type of aggregate to include in group headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.DataType">
            <summary>
            Gets the type of the data bound to this column.
            </summary>
            <remarks>
            if no data is set in the grid this property will return typeof(object).
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.PropertyInfo">
            <summary>
            Gets or sets a <see cref="P:C1.iOS.Grid.GridColumn.PropertyInfo"/> object used for binding the
            column to items in the data source.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.ValueConverter">
            <summary>
            Gets or sets an <see cref="T:C1.iOS.Core.IValueConverter"/> associated with this column's <see cref="P:C1.iOS.Grid.GridColumn.Binding"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.DataMap">
            <summary>
            Gets or sets the DataMap used to convert raw values into display values for the column.
            </summary>
            <remarks>
            Columns with an associated <see cref="T:C1.iOS.Grid.GridDataMap"/> will display a picker instead of the inline editor.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.AllowResizing">
            <summary>
            Gets or sets a value indicating whether this column can be resized.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.AllowDragging">
            <summary>
            Gets or sets a value indicating whether this column can be dragged.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.WordWrap">
            <summary>
            Gets or sets a value indicating whether cells in the column wrap their content.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.SortDirection">
            <summary>
            Gets the sort direction when the underlying collection is sorted by the same field as this column's <see cref="P:C1.iOS.Grid.GridColumn.SortMemberPath"/> or <see cref="P:C1.iOS.Grid.GridColumn.Binding"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.PrepareCell(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow,C1.iOS.Grid.GridCellView)">
            <summary>
            Prepares the cell to be shown.
            </summary>
            <param name="cellType">The kind of cell.</param>
            <param name="row">The row that determines the cell.</param>
            <param name="cell">The cell element.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.GetCellContentType(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow)">
            <summary>
            Gets the type of cell content.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row that determines the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.CreateCellContent(C1.iOS.Grid.GridCellType,System.Object,C1.iOS.Grid.GridRow)">
            <summary>
            Creates the content of the cell (Without binding it to the data item).
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="cellContentType">Type of cell content.</param>
            <param name="row">The row that determines the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.BindCellContent(UIKit.UIView,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow)">
            <summary>
            Binds the content of the cell with the data item.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.UnbindCellContent(UIKit.UIView,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow)">
            <summary>
            Unbinds the content of the cell with the data item.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.AllowEditing(C1.iOS.Grid.GridRow)">
            <summary>
            Returns true when the cell in the intersection of the specified row and this column can be edited.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.CreateCellEditor(C1.iOS.Grid.GridRow)">
            <summary>
            Creates the cell editor.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.GetEditorValue(C1.iOS.Grid.GridRow,UIKit.UIView)">
            <summary>
            Gets the editor value.
            </summary>
            <param name="row">The row.</param>
            <param name="editor">The editor.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.OnEditEnded(C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridRow,UIKit.UIView,System.Boolean)">
            <summary>
            Called before the cell ends editing.
            </summary>
            <param name="range">The range that is being edited.</param>
            <param name="row">The row that is being edited.</param>
            <param name="editor">The editor</param>
            <param name="editCancelled">Whether the edit was cancelled or not.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.GetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow)">
            <summary>
            Gets the value corresponding to the cell in the intersection of the specified row and this column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row that determines the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.GetCellText(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow)">
            <summary>
            Gets the text corresponding to the cell in the intersection of the specified row and this column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row that determines the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.GetFormattedString(System.Object)">
            <summary>
            Gets a formatted string considering <see cref="P:C1.iOS.Grid.GridColumn.DataMap"/> and <see cref="P:C1.iOS.Grid.GridColumn.Format"/> properties.
            </summary>
            <param name="value">The value to be formatted.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.SetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow,System.Object)">
            <summary>
            Sets the value corresponding to the cell in the intersection of the specified row and this column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row that determines the cell.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.GetCellValue(System.Object)">
            <summary>
            Gets the value from data item corresponding to this column.
            </summary>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.SetCellValue(System.Object,System.Object)">
            <summary>
            Sets the specified <paramref name="value"/> to <paramref name="dataItem"/> property related to this column.
            </summary>
            <param name="dataItem">The data item which stores the value.</param>
            <param name="value">The value to be set in the data item.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.ActualHeader">
            <summary>
            Gets the header that will be shown in the column header. if <see cref="P:C1.iOS.Grid.GridColumn.Header"/> is not specified the <see cref="P:C1.iOS.Grid.GridColumn.Binding"/> property will be used.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridColumn.ActualWidth">
            <summary>
            Gets the actual width of the column in pixels.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridColumn.CreateBindingFunction(System.Type,System.String)">
            <summary>
            Creates a compiled function to access the property specified by the <paramref name="bindingPath"/> of the <paramref name="itemType"/>.
            </summary>
            <param name="itemType">The type of the items.</param>
            <param name="bindingPath">The property path</param>
        </member>
        <member name="T:C1.iOS.Grid.GridAggregate">
            <summary>
            Specifies the type of aggregate to calculate over a group of values.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.None">
            <summary>
            No aggregate.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Sum">
            <summary>
            Returns the sum of all values in the group.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Count">
            <summary>
            Returns the count of non-null values in the group.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Average">
            <summary>
            Returns the average value of the non-null cells in the group.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Maximum">
            <summary>
            Returns the maximum value in the group.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Minimum">
            <summary>
            Returns the minimum value in the group.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Range">
            <summary>
            Returns the difference between the maximum and minimum values in the group.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Std">
            <summary>
            Returns the sample standard deviation of the values in the group (uses the formula based on n-1).
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Var">
            <summary>
            Returns the sample variance of the values in the group (uses the formula based on n-1).
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.StdPop">
            <summary>
            Returns the population standard deviation of the values in the group (uses the formula based on n).
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.VarPop">
            <summary>
            Returns the population variance of the values in the group (uses the formula based on n).
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAggregate.Custom">
            <summary>
            Raise the <b>CustomAggregate</b> event to calculate custom aggregates.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridDataMap">
            <summary>
            Represents a data map for use with the column's dataMap property.
            </summary>
            <remarks>
            Data maps provide the grid with automatic look up capabilities. For example, you may want to display a customer name instead of his ID, or a color name instead of its RGB value.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridDataMap.ItemsSource">
            <summary>
            Gets or sets the collection of items to map.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridDataMap.DataCollection">
            <summary>
            Gets the inner data collection.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridDataMap.SelectedValuePath">
            <summary>
            The name of the property that contains the keys (data values).
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridDataMap.DisplayMemberPath">
            <summary>
            The name of the property to use as the visual representation of the items.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridDataMap.GetDisplayValue(System.Object)">
            <summary>
            Gets the display value corresponding to the specified selected value.
            </summary>
            <param name="value">The selected value.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridDataMap.GetKeyValue(System.Object)">
            <summary>
            Gets the key value corresponding to the specified display value.
            </summary>
            <param name="value">The displayed value.</param>
        </member>
        <member name="T:C1.iOS.Grid.CancelEventArgs">
            <summary>
            Event data with a <see cref="P:C1.iOS.Grid.CancelEventArgs.Cancel"/> property that can be used to cancel the event.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.CancelEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.CancelEventArgs"/> class.
            </summary>
            <param name="cancellable">if set to <c>true</c> the event is cancellable.</param>
        </member>
        <member name="P:C1.iOS.Grid.CancelEventArgs.Cancellable">
            <summary>
            Gets a value indicating whether the associated event is cancellable.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.CancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the associated event should be canceled.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridAutoGeneratingColumnEventArgs">
            <summary>
            Event data for AutoGeneratingColumn event of <see cref="T:C1.iOS.Grid.FlexGrid"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridAutoGeneratingColumnEventArgs.#ctor(System.Reflection.PropertyInfo,C1.iOS.Grid.GridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridAutoGeneratingColumnEventArgs"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="column">The column.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridAutoGeneratingColumnEventArgs.Property">
            <summary>
            Gets the property info associated to the column that is being auto-generated.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridAutoGeneratingColumnEventArgs.Column">
            <summary>
            Gets or sets the column that is being auto-generated.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridCellEditEventArgs">
            <summary>
            Event data for editing events.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellEditEventArgs.#ctor(System.Boolean,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,UIKit.UIView,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellEditEventArgs"/> class.
            </summary>
            <param name="cancellable">if set to <c>true</c> the vent is cancelable.</param>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="editor">The edited value.</param>
            <param name="cancelEdits">Gets a value indicating whether the edit was cancelled.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridCellEditEventArgs.CancelEdits">
            <summary>
            Gets a value that determines whether the editing action was canceled.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellEditEventArgs.Editor">
            <summary>
            Gets the editor.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridCellRangeEventArgs">
            <summary>
            Event data for events associated with a range of cells.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRangeEventArgs.#ctor(System.Boolean,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> class.
            </summary>
            <param name="cancellable">if set to <c>true</c> the event is cancelable.</param>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridCellRangeEventArgs.CellType">
            <summary>
            Gets the type of the cell.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellRangeEventArgs.CellRange">
            <summary>
            Gets the cell range.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridOutlineEventArgs">
            <summary>
            Event data for <see cref="E:GridColumnHeaderCell.OutlineTapped"/>.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:C1.iOS.Grid.GridOutlineEventArgs.Level">
            <summary>
            Gets the level of the tapped outline.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.FlexGrid">
            <summary>
            Control used to display and edit tabular information. 
            </summary>
            <remarks>
            Supports virtualized data-binding and automatic sorting and filters in client/server scenarios.
            </remarks>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.FlexGrid"/> class.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.FlexGrid"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.CellFactory">
            <summary>
            Gets or sets the factory of cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.MergeManager">
            <summary>
            Gets or sets the merge manager.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.DataCollection">
            <summary>
            Gets the inner collection view.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.Columns">
            <summary>
            Gets the collection of columns of the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.Rows">
            <summary>
            Gets the collection of rows of the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.RowHeaderColumns">
            <summary>
            Gets the collection of columns of the row header.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.ColumnHeaderRows">
            <summary>
            Gets the collection of rows of the column headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.Cells">
            <summary>
            Gets the <see cref="T:C1.iOS.Grid.GridPanel"/> that contains the data cells in the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.ColumnHeaders">
            <summary>
            Gets the <see cref="T:C1.iOS.Grid.GridPanel"/> that contains the column header cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.RowHeaders">
            <summary>
            Gets the <see cref="T:C1.iOS.Grid.GridPanel"/> that contains the row header cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.TopLeftCells">
            <summary>
            Gets the <see cref="T:C1.iOS.Grid.GridPanel"/> that contains the cells in the upper left corner of the grid.
            </summary>
            <remarks>
            This is the area above the row headers and to the left of the column headers. By default, it
            contains only one cell at the top left corner of the grid.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.ItemsSource">
            <summary>
            Gets or sets the collection of items.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value to determine whether columns are generated automatically from the properties of the items of <see cref="P:ItemsSource"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.MinColumnWidth">
            <summary>
            Gets or sets the minimum width of columns in the <see cref="T:C1.iOS.Grid.FlexGrid"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.MaxColumnWidth">
            <summary>
            Gets or sets the maximum width of columns in the <see cref="T:C1.iOS.Grid.FlexGrid"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.MinRowHeight">
            <summary>
            Gets or sets the minimum height of rows in the <see cref="T:C1.iOS.Grid.FlexGrid"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.MaxRowHeight">
            <summary>
            Gets or sets the maximum height of rows in the <see cref="T:C1.iOS.Grid.FlexGrid"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.DefaultColumnWidth">
            <summary>
            Gets or sets the default width of the columns.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.DefaultRowHeight">
            <summary>
            Gets or sets the default height of the rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.DefaultColumnHeaderRowHeight">
            <summary>
            Gets or sets the default height of the rows used to display column headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.DefaultRowHeaderColumnWidth">
            <summary>
            Gets or sets the default width of the columns used to display row headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.AutoSizeMode">
            <summary>
            Gets or sets which cells should be taken into account when auto-sizing a row or column.
            </summary>
            <remarks>By default, the grid will automatically set the column width based on the content of the header and data cells in the column. This property allows you to change that to include only the headers or only the data.</remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.GroupHeaderConverter">
            <summary>
            Gets or sets the <see cref="T:C1.iOS.Core.IValueConverter"/> used to create the content shown
            in <see cref="T:C1.iOS.Grid.GridGroupRow"/> cells to summarize group information.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.GroupHeaderFormat">
             <summary>
             Gets or sets the format string used to create the group header content.
            </summary>
            <remarks>
            The string may contain any text, plus the following replacement strings: 
            <list type="bullet">
                <listheader>
                    <term>{name}</term>
                    <description>The name of the property being grouped on.</description>
                </listheader>
                <item>
                    <term>{value}</term>
                    <description>The value of the property being grouped on.</description>
                </item>
                <item>
                    <term>{level}</term>
                    <description>The group level.</description>
                </item>
                <item>
                    <term>{count}</term>
                    <description>The total number of items in this group.</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.MaxGroupLevel">
            <summary>
            Gets the maximum group level present in the grid.
            </summary>
            <remarks>
            If the grid does not contain any groups, this property returns -1.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.AllowSorting">
            <summary>
            Gets or sets whether users are allowed to sort columns by tapping or clicking the column header cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.ShowSort">
            <summary>
            Gets or sets whether the grid should display sort indicators in the column headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.TreeIndent">
            <summary>
            Gets or sets the indent used to offset each group of rows in the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.AlternatingRowBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the background of odd-numbered rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.AlternatingRowTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> that is used to paint the text of odd-numbered rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.GroupRowBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the group row background.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.GroupRowTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the text and glyphs of the group rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.NewRowBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the new row background.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.NewRowTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> of the text and glyphs of the new row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.GroupRowFont">
            <summary>
            Gets or sets the font applied to group row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.DefaultGroupRowHeight">
            <summary>
            Gets or sets the default height of the group rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.ShowOutlineBar">
            <summary>
            Gets or sets a value that determines whether the grid should display
            the outline button bar.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.GroupRowPosition">
            <summary>
            Gets or sets a value that indicates where group rows should be displayed with
            respect to the data.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.NewRowPosition">
            <summary>
            Gets or sets a value that indicates whether the new row template should be
            displayed at the bottom or at the top of the grid, or if there should not be displayed.
            </summary>
            <remarks>
            This property has an effect only when the grid is bound to a data source that supports
            adding new items.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.NewRowPlaceholder">
            <summary>
            Gets or sets the message displayed in the new row template.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.SortAscendingIconTemplate">
            <summary>
            Gets or sets the template of the sort icon when it is sorted ascendingly.
            </summary>
            <remarks>
            When this property is null, the <see cref="P:C1.iOS.Grid.FlexGrid.SortDescendingIconTemplate"/> icon template will be mirrored horizontally.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.SortDescendingIconTemplate">
            <summary>
            Gets or sets the template of the sort icon when it is sorted descendingly.
            </summary>
            <remarks>
            When this property is null, the <see cref="P:C1.iOS.Grid.FlexGrid.SortAscendingIconTemplate"/> icon template will be mirrored horizontally.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.SortIconPosition">
            <summary>
            Gets or sets the position of the sort icon inside the column header.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.GroupExpandedIconTemplate">
            <summary>
            Gets or sets the template used to create the icon displayed when the group is expanded.
            </summary>
            <remarks>
            When the group expand up, because <see cref="P:C1.iOS.Grid.FlexGrid.GroupRowPosition"/> was set in the grid, this icon will be mirrored horizontally.
            </remarks>
            <remarks>
            If this icon template is not specified, the icon will be created by rotating <see cref="P:C1.iOS.Grid.FlexGrid.GroupCollapsedIconTemplate"/> 90º counterclockwise.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.GroupCollapsedIconTemplate">
            <summary>
            Gets or sets the template used to create the icon displayed when the group is collapsed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.EditIconTemplate">
            <summary>
            Gets or sets the template used to create the icon displayed in the header when a row is being edited.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.NewRowIconTemplate">
            <summary>
            Gets or sets the template used to create the icon displayed in the header of a new row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.Style">
            <summary>
            Gets or sets the style of the grid.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.FlexGrid.AutoGeneratingColumn">
            <summary>
            Occurs when an auto-generated column is being created.
            </summary>
            <remarks>
            You can change the auto-generated column by setting the property <see cref="P:C1.iOS.Grid.GridAutoGeneratingColumnEventArgs.Column"/>.
            You can cancel an auto-generated column by setting the property <see cref="P:C1.iOS.Grid.CancelEventArgs.Cancel"/> to true, 
            in this case there will not be column for this property.
            </remarks>
        </member>
        <member name="E:C1.iOS.Grid.FlexGrid.ItemsSourceChanging">
            <summary>
            Occurs before the items source is changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.FlexGrid.ItemsSourceChanged">
            <summary>
            Occurs after the items source is changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.FlexGrid.GroupCollapsedChanging">
            <summary>
            Occurs before the <see cref="P:C1.iOS.Grid.GridGroupRow.IsCollapsed"/> property of a <see cref="T:C1.iOS.Grid.GridGroupRow"/> object changes.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.FlexGrid.GroupCollapsedChanged">
            <summary>
            Occurs after the <see cref="P:C1.iOS.Grid.GridGroupRow.IsCollapsed"/> property of a <see cref="T:C1.iOS.Grid.GridGroupRow"/> object changes.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.FlexGrid.BeginningRowEdit">
            <summary>
            Occurs when the edit of a row is about to start.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.FlexGrid.RowEditEnding">
            <summary>
            Occurs when a row edit is ending.
            </summary>
            <remarks>
            <para>You can cancel this event by setting the <b>Cancel</b> property of the event argument 
            to true in the event handler.</para>
            <para>If this event is not canceled, the edits will be committed or canceled depending on the
            setting of the <b>CancelEdits</b> property of the event argument.</para>
            <para>Alternatively, you can set the <see cref="P:IsReadOnly"/> property to true to 
            disable editing in the grid.</para>
            </remarks>
        </member>
        <member name="E:C1.iOS.Grid.FlexGrid.RowEditEnded">
            <summary>
            Occurs when a row edit has been committed or canceled.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnAutoGeneratingColumn(C1.iOS.Grid.GridAutoGeneratingColumnEventArgs)">
            <summary>
            Raises the <see cref="E:AutoGeneratingColumn" /> event.
            </summary>
            <param name="e">The <see cref="T:C1.iOS.Grid.GridAutoGeneratingColumnEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnGroupCollapsedChanging(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:GroupCollapsedChanging"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnGroupCollapsedChanged(C1.iOS.Grid.GridCellRangeEventArgs)">
            <summary>
            Raises the <see cref="E:C1.iOS.Grid.FlexGrid.GroupCollapsedChanged"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnBeginningRowEdit(C1.iOS.Grid.GridCellEditEventArgs)">
            <summary>
            Raises the <see cref="E:BeginningRowEdit"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellEditEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnRowEditEnding(C1.iOS.Grid.GridCellEditEventArgs)">
            <summary>
            Raises the <see cref="E:RowEditEnding"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellEditEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnRowEditEnded(C1.iOS.Grid.GridCellEditEventArgs)">
            <summary>
            Raises the <see cref="E:RowEditEnded"/> event.
            </summary>
            <param name="e"><see cref="T:C1.iOS.Grid.GridCellEditEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.IsGrouping">
            <summary>
            Gets whether the inner <see cref="T:C1.DataCollection.IDataCollection`1"/> is grouped.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnIsReadOnlyChanged">
            <summary>
            Called when the property <see cref="P:IsReadOnly"/> changed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the value of the cell specified by its row and column.
            </summary>
            <param name="row">The row.</param>
            <param name="col">The column.</param>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.Item(C1.iOS.Grid.GridRow,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets or sets the value of the cell specified by its row and column.
            </summary>
            <param name="row">The row.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.GetCellValue(C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets the value corresponding to the cell in the specified range.
            </summary>
            <param name="range">The range of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.GetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets the value corresponding to the cell in the specified range.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="range">The range of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.GetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the value corresponding to the cell in the specified row and column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.GetCellText(C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets the text corresponding to the cell in the specified range.
            </summary>
            <param name="range">The range of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.GetCellText(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets the text corresponding to the cell in the specified range.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="range">The range of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.GetCellText(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the text corresponding to the cell in the specified row and column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.SetCellValue(C1.iOS.Grid.GridCellRange,System.Object)">
            <summary>
            Sets the value corresponding to the cell in the specified range.
            </summary>
            <param name="range">The range of the cell.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.SetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)">
            <summary>
            Sets the value corresponding to the cell in the specified range.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="range">The range of the cell.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.SetCellValue(C1.iOS.Grid.GridCellType,System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value corresponding to the cell in the specified range.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.SetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRow,C1.iOS.Grid.GridColumn,System.Object)">
            <summary>
            Sets the value corresponding to the cell in the specified row and column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.CollapseGroups(System.Int32)">
            <summary>
            Collapses the groups.
            </summary>
            <param name="level">Grouping level to show.</param>
            <remarks>
            <para>When the grid is bound to a grouped data source, it automatically
            adds group rows above each group. Individual group rows can be collapsed
            or expanded using the <see cref="P:C1.iOS.Grid.GridGroupRow.IsCollapsed"/> property.</para>
            <para>This method allows the caller to expand or collapse the entire 
            outline to a given level.</para>
            <para>For example, if the grid is bound to a data source with <b>three</b>
            group descriptors, then <b>CollapseGroups(0)</b> would collapse all 
            top-level group rows, showing only the first level of the grouping outline. 
            <b>CollapseGroups(2)</b> would show all the group rows, and no data
            rows. <b>CollapseGroups(3)</b> would show all rows (groups and
            detail).</para>
            <example>
            The code below creates data source with three levels of grouping, then
            shows the first two levels of the grouping outline:
            <code>
            // create grouped data source
            var view = new C1DataCollection(dataList);
            var gd = view.GroupDescriptions;
            await view.GroupAsync("Country", "City", "Customer");
            
            // assign data source to grid
            _flex.ItemsSource = view;
            
            // collapse grouping outline to level 1
            // (show country and city groups, hide customer groups and all detail rows)
            _flex.CollapseGroups(1);
            
            // expand grouping outline show all detail
            _flex.CollapseGroups(gd.Count);
            
            // collapse grouping outline to show all group rows and no detail
            _flex.CollapseGroups(gd.Count - 1);
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.AutoSizeColumn(System.Int32,System.Boolean)">
            <summary>
            Resizes a column to fit their visible content.
            </summary>
            <param name="col">Index of the column to resize.</param>
            <param name="header">Whether the column index refers to a regular or a header row column.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.AutoSizeColumns(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Resizes a column range to fit their visible content.
            </summary>
            <param name="startCol">Index of the first column to resize.</param>
            <param name="endCol">Index of the last column to resize.</param>
            <param name="header">Whether the column indexes refers to regular or header row columns.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.AutoSizeRow(System.Int32,System.Boolean)">
            <summary>
            Resizes a row to fit their visible contents.
            </summary>
            <param name="row">Index of the row to resize.</param>
            <param name="header">Whether the row index refers to a regular or a header column row.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.AutoSizeRows(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Resizes a row range to fit their visible contents.
            </summary>
            <param name="startRow">Index of the first row to resize.</param>
            <param name="endRow">Index of the last row to resize.</param>
            <param name="header">Whether the row indexes refers to regular or header column rows.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.StartEditing(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Starts editing a specific cell.
            </summary>
            <remarks>If the editing couldn't start synchronously this call will return false. Consider using <see cref="M:StartEdiringAsync"/> to wait for the result when the row-editing is performed asynchronously in the collection view.</remarks>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <param name="fullEdit">Whether to stay in edit mode when the user presses
            the cursor keys.</param>
            <param name="focus">Whether to set the focus and select the text in the editor.</param>
            <returns><c>true</c> if the editing started and it started synchronously.</returns>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.StartEditingAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Starts the editing of the specified cell asynchronously.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <param name="fullEdit">Whether to stay in edit mode when the user presses</param>
            <param name="focus">Whether to set the focus and select the text in the editor.</param>
            <returns><c>true</c> if the editing started.</returns>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.FinishRowEditing(System.Boolean)">
            <summary>
            Finishes the row editing.
            </summary>
            <param name="cancelEdits">if set to <c>true</c> the changes will be cancelled.</param>
            <returns></returns>
        </member>
        <member name="P:C1.iOS.Grid.FlexGrid.NewRow">
            <summary>
            Gets the row used to enter new records into the grid.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.CreateSelectionMenu(C1.iOS.Grid.GridCellRange)">
            <summary>
            Creates the selection menu.
            </summary>
            <param name="range">The range from which the selection menu will be opened.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnCellTapped(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Core.C1TappedEventArgs)">
            <summary>
            Called when a cell is tapped.
            </summary>
            <param name="cellType">The type of cell</param>
            <param name="range">The range</param>
            <param name="te">The tapped events</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnCellDoubleTapped(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Core.C1TappedEventArgs)">
            <summary>
            Called when a cell is double tapped.
            </summary>
            <param name="cellType">The type of cell</param>
            <param name="range">The range</param>
            <param name="te">The tapped events</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.OnCellLongPressed(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Core.C1TappedEventArgs)">
            <summary>
            Called when a cell is being held.
            </summary>
            <param name="cellType">The type of cell</param>
            <param name="range">The range</param>
            <param name="te">The tapped events</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.LoadDesignTimeData">
            <summary>
            Loads dummy design time content visible in Storyboard and Android designer
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.Save(System.String,C1.iOS.Grid.GridFileFormat,System.Text.Encoding,C1.iOS.Grid.GridSaveOptions)">
            <summary>
            Saves the contents of the grid to a file.
            </summary>
            <param name="fileName">Name of the file to save.</param>
            <param name="format"><see cref="T:C1.iOS.Grid.GridFileFormat"/> value that specifies the format used to save the file.</param>
            <param name="encoding"><see cref="T:System.Text.Encoding"/> value that specifies the encoding for the file.</param>
            <param name="options"><see cref="T:C1.iOS.Grid.GridSaveOptions"/> value that specifies options to use when saving the file.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.Save(System.String,C1.iOS.Grid.GridFileFormat,C1.iOS.Grid.GridSaveOptions)">
            <summary>
            Saves the contents of the grid to an UTF8-encoded file.
            </summary>
            <param name="fileName">Name of the file to save.</param>
            <param name="format"><see cref="T:C1.iOS.Grid.GridFileFormat"/> value that specifies the format used to save the file.</param>
            <param name="options"><see cref="T:C1.iOS.Grid.GridSaveOptions"/> value that specifies options to use when saving the file.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.Save(System.String,C1.iOS.Grid.GridFileFormat)">
            <summary>
            Saves the contents of the grid to an UTF8-encoded file.
            </summary>
            <param name="fileName">Name of the file to save.</param>
            <param name="format"><see cref="T:C1.iOS.Grid.GridFileFormat"/> value that specifies the format used to save the file.</param>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.Save(System.IO.Stream,C1.iOS.Grid.GridFileFormat)">
            <summary>
            Saves the contents of the grid to an UTF8-encoded stream.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> where the contents will be saved.</param>
            <param name="format"><see cref="T:C1.iOS.Grid.GridFileFormat"/> value that specifies the format used to save the file.</param>
            <remarks>
            The caller is responsible for closing the <see cref="T:System.IO.Stream"/>.
            </remarks>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.Save(System.IO.Stream,C1.iOS.Grid.GridFileFormat,C1.iOS.Grid.GridSaveOptions)">
            <summary>
            Saves the contents of the grid to an UTF8-encoded stream.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> where the contents will be saved.</param>
            <param name="format"><see cref="T:C1.iOS.Grid.GridFileFormat"/> value that specifies the format used to save the file.</param>
            <param name="options"><see cref="T:C1.iOS.Grid.GridSaveOptions"/> value that specifies options to use when saving the file.</param>
            <remarks>
            The caller is responsible for closing the <see cref="T:System.IO.Stream"/>.
            </remarks>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.Save(System.IO.Stream,C1.iOS.Grid.GridFileFormat,System.Text.Encoding,C1.iOS.Grid.GridSaveOptions)">
            <summary>
            Saves the contents of the grid to a stream.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> where the contents will be saved.</param>
            <param name="format"><see cref="T:C1.iOS.Grid.GridFileFormat"/> value that specifies the format used to save the file.</param>
            <param name="encoding"><see cref="T:System.Text.Encoding"/> value that specifies the encoding for the file.</param>
            <param name="options"><see cref="T:C1.iOS.Grid.GridSaveOptions"/> value that specifies options to use when saving the file.</param>
            <remarks>
            The caller is responsible for closing the <see cref="T:System.IO.Stream"/>.
            </remarks>
        </member>
        <member name="M:C1.iOS.Grid.FlexGrid.Save(System.IO.StreamWriter,C1.iOS.Grid.GridFileFormat,C1.iOS.Grid.GridSaveOptions)">
            <summary>
            Saves the contents of the grid to a <see cref="T:System.IO.StreamWriter"/>.
            </summary>
            <param name="sw"><see cref="T:System.IO.StreamWriter"/> where the contents will be saved.</param>
            <param name="format"><see cref="T:C1.iOS.Grid.GridFileFormat"/> value that specifies the format used to save the file.</param>
            <param name="options"><see cref="T:C1.iOS.Grid.GridSaveOptions"/> value that specifies options to use when saving the file.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridGroupRowPosition">
            <summary>
            Specifies where to place the group rows used to delimit data groups.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridGroupRowPosition.AboveData">
            <summary>
            Place group rows above the data.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridGroupRowPosition.BelowData">
            <summary>
            Place group rows below the data.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridGroupRowPosition.None">
            <summary>
            Do not show group rows.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridNewRowPosition">
            <summary>
            Specifies where the new row template should be displayed when the grid is 
            bound to a <see cref="T:C1.DataCollection.IDataCollection`1"/> that supports adding new items.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridNewRowPosition.Bottom">
            <summary>
            The new row template is displayed at the bottom of the grid.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridNewRowPosition.Top">
            <summary>
            The new row template is displayed at the top of the grid.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridNewRowPosition.None">
            <summary>
            Do not show new row template.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridSortIconPosition">
            <summary>
            Specifies where the sort icon will be laid out.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSortIconPosition.Left">
            <summary>
            The sort icon will be laid out at the left inside the column header.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSortIconPosition.Inline">
            <summary>
            The sort icon will be laid out following the title.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSortIconPosition.Right">
            <summary>
            The sort icon will be laid out at the right inside the column header.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridAutoSizeMode">
            <summary>
            Specifies constants that define the row/column auto-sizing behavior.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAutoSizeMode.None">
            <summary>
            Autosizing does not take neither cells nor headers into account.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAutoSizeMode.Headers">
            <summary>
            Autosizing accounts for header cells.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAutoSizeMode.Cells">
            <summary>
            Autosizing accounts for data cells.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridAutoSizeMode.Both">
            <summary>
            Autosizing accounts for header and data cells.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridFileFormat">
            <summary>
            Specifies file formats available for saving the grid.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridFileFormat.Csv">
            <summary>
            Comma-separated values (can be loaded into Excel).
            </summary>
            <remarks>
            Cell values are enclosed in double quotes and separated by commas. 
            </remarks>
        </member>
        <member name="F:C1.iOS.Grid.GridFileFormat.Text">
            <summary>
            Tab-separated plain text format.
            </summary>
            <remarks>
            Cell values are separated by tab characters. 
            </remarks>
        </member>
        <member name="F:C1.iOS.Grid.GridFileFormat.Html">
            <summary>
            Hypertext markup language.
            </summary>
            <remarks>
            Creates an HTML table with basic formatting (font, column widths, and alignment).
            Invisible rows and columns are not saved.
            </remarks>
        </member>
        <member name="T:C1.iOS.Grid.GridSaveOptions">
            <summary>
            Specifies options available for customizing the files created by the 
            <see cref="M:FlexGrid.Save(Stream, GridFileFormat, GridSaveOptions)"/> method.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSaveOptions.None">
            <summary>
            No options set.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSaveOptions.SaveColumnHeaders">
            <summary>
            Save column headers.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSaveOptions.SaveRowHeaders">
            <summary>
            Save row headers.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSaveOptions.SaveHeaders">
            <summary>
            Save row and column headers.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSaveOptions.VisibleRows">
            <summary>
            Save only visible rows.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSaveOptions.VisibleColumns">
            <summary>
            Save only visible columns.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridSaveOptions.VisibleOnly">
            <summary>
            Save only visible rows and columns.
            </summary>
            <remarks>
            This option only affects files saved as CSV or text.
            Invisible rows and columns are never saved to HTML files.
            </remarks>
        </member>
        <member name="F:C1.iOS.Grid.GridSaveOptions.Formatted">
            <summary>
            Save formatted values.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridStyle">
            <summary>
            Determines the visual aspect of the grid
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridStyle.Default">
            <summary>
            The default style is developed to much native controls
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridStyle.Classic">
            <summary>
            The classic style mimics excel style.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridCellFactoryBase">
            <summary>
            Implements the functionality to create grid cells dynamically.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellFactoryBase"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.GridBase">
            <summary>
            Gets the associated grid.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.Contains(C1.iOS.Grid.GridCellFactoryBase)">
            <summary>
            Returns true if the specified <paramref name="cellFactory"/> is the same instance as this or if it is one of the nested cell factories.
            </summary>
            <param name="cellFactory"></param>
            <returns></returns>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.FullRange">
            <summary>
            Gets a range containing all the rows and columns
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.ColumnsCount">
            <summary>
            Gets the total number of columns.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.RowsCount">
            <summary>
            Gets the total number of rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.CellsColumnsCount">
            <summary>
            Gets the number of columns belonging to the cells area.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.CellsRowsCount">
            <summary>
            Gets the number of rows belonging to the cells area.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.RowHeaderColumnsCount">
            <summary>
            Gets the number of columns belonging to the row headers area.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.ColumnHeaderRowsCount">
            <summary>
            Gets the number of rows belonging to the column headers area.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.DefaultColumn">
            <summary>
            Gets the default column dimensions.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryBase.DefaultRow">
            <summary>
            Gets the default row dimensions.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetDefaultColumn">
            <summary>
            Gets the default column dimensions.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetDefaultRow">
            <summary>
            Gets the default row dimensions.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetColumnInfo(System.Boolean,System.Int32)">
            <summary>
            Gets the dimensions for the specified column.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="column">The index of the column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetRowInfo(System.Boolean,System.Int32)">
            <summary>
            Gets the dimensions for the specified row.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="row">The index of the row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.CanSetColumnWidth(System.Boolean,System.Int32)">
            <summary>
            Determines whether the with of a column can be set.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="column">The index of the column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.SetColumnWidth(System.Boolean,System.Int32,System.Double)">
            <summary>
            Sets the width of the specified column.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="column">The index of the column.</param>
            <param name="width">The width of the column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.CanSetRowHeight(System.Boolean,System.Int32)">
            <summary>
            Determines whether the height of the row can be set.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="row">The index of the row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.SetRowHeight(System.Boolean,System.Int32,System.Double)">
            <summary>
            Sets the height of the row.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="row">The index of the row.</param>
            <param name="height">The height of the row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.SaveDesiredCellSize(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Returns whether the desired size for a specific cell is taken into account.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridCellFactoryBase.ColumnInfo">
            <summary>
            Contains the dimensions of a column.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.ColumnInfo.#ctor(C1.iOS.Grid.GridLength,System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellFactoryBase.ColumnInfo"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="minWidth">The minimum width.</param>
            <param name="maxWidth">The maximum width.</param>
            <param name="isVisible">if set to <c>true</c> the column is visible.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.ColumnInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.ColumnInfo.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.ColumnInfo.op_Equality(C1.iOS.Grid.GridCellFactoryBase.ColumnInfo,C1.iOS.Grid.GridCellFactoryBase.ColumnInfo)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.ColumnInfo.op_Inequality(C1.iOS.Grid.GridCellFactoryBase.ColumnInfo,C1.iOS.Grid.GridCellFactoryBase.ColumnInfo)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:C1.iOS.Grid.GridCellFactoryBase.RowInfo">
            <summary>
            Contains the dimensions of a row.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.RowInfo.#ctor(C1.iOS.Grid.GridLength,System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellFactoryBase.RowInfo"/> class.
            </summary>
            <param name="height">The height.</param>
            <param name="minHeight">The minimum height.</param>
            <param name="maxHeight">The maximum height.</param>
            <param name="isVisible">if set to <c>true</c> the row is visible.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.RowInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.RowInfo.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.RowInfo.op_Equality(C1.iOS.Grid.GridCellFactoryBase.RowInfo,C1.iOS.Grid.GridCellFactoryBase.RowInfo)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.RowInfo.op_Inequality(C1.iOS.Grid.GridCellFactoryBase.RowInfo,C1.iOS.Grid.GridCellFactoryBase.RowInfo)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetColumnOffset(System.Int32)">
            <summary>
            Gets the distance between the origin and the specified column.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetColumnOffset(System.Int32,System.Int32)">
            <summary>
            Gets the distance between the two specified columns.
            </summary>
            <param name="fromColumn">From column.</param>
            <param name="toColumn">To column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetRowOffset(System.Int32)">
            <summary>
            Gets the distance between the origin and the specified row.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetRowOffset(System.Int32,System.Int32)">
            <summary>
            Gets the distance between the two specified rows.
            </summary>
            <param name="fromRow">From row.</param>
            <param name="toRow">To row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetFrozenRows">
            <summary>
            Gets the number of frozen rows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetFrozenColumns">
            <summary>
            Gets the number of frozen columns.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.PrepareCell(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridCellView)">
            <summary>
            Prepares the cell to be shown.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetCellContentType(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a key that defines the type of cell content.
            </summary>
            <remarks>
            If null is returned, the cell will not be recycled, therefore the <see cref="M:C1.iOS.Grid.GridCellFactoryBase.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)"/> method will be called for every rendered cell.
            Notice this will affect the performance negatively.
            </remarks>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <returns>The returned object will be used as a key to recycle cell content´s</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)">
            <summary>
            Creates the content of the cell.
            </summary>
            <remarks>The actual data is set in the BindCellContent method.</remarks>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContentType">Type of the cell content.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.BindCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,UIKit.UIView)">
            <summary>
            Binds the content of the cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContent">Content of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.UnbindCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,UIKit.UIView)">
            <summary>
            Unbinds the content of the cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContent">Content of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.GetCellText(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets the text representing the content of a cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.SetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)">
            <summary>
            Sets the value of a specified cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="value">The value to be set in the cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.AllowEditing(C1.iOS.Grid.GridCellRange)">
            <summary>
            Returns true when the cell in the specified range can be edited.
            </summary>
            <param name="range">The range of the cell being edited.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.CreateCellEditor(C1.iOS.Grid.GridCellRange)">
            <summary>
            Creates the cell editor.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.OnEditEnded(C1.iOS.Grid.GridCellRange,UIKit.UIView,System.Boolean)">
            <summary>
            Called when the editing of a cell ended.
            </summary>
            <param name="range">The range that was edited.</param>
            <param name="editor">The editor.</param>
            <param name="editCancelled"><c>true</c> if the editing was cancelled.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="E:C1.iOS.Grid.GridCellFactoryBase.RowsChanging">
            <summary>
            Occurs before rows changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridCellFactoryBase.RowsChanged">
            <summary>
            Occurs after rows changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridCellFactoryBase.ColumnsChanging">
            <summary>
            Occurs before columns changed.
            </summary>
        </member>
        <member name="E:C1.iOS.Grid.GridCellFactoryBase.ColumnsChanged">
            <summary>
            Occurs after columns changed.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.OnRowsChanging(C1.iOS.Grid.GridCellFactoryNotifyChange)">
            <summary>
            Notifies the cell-factory there will be changed in the model rows.
            </summary>
            <param name="change">The change.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.OnRowsChanged(C1.iOS.Grid.GridCellFactoryNotifyChange)">
            <summary>
            Notifies the cell-factory there were changes in the model rows.
            </summary>
            <param name="change">The change.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.OnColumnsChanging(C1.iOS.Grid.GridCellFactoryNotifyChange)">
            <summary>
            Notifies the cell-factory there will be changed in the model columns.
            </summary>
            <param name="change">The change.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.OnColumnsChanged(C1.iOS.Grid.GridCellFactoryNotifyChange)">
            <summary>
            Notifies the cell-factory there were changed in the model columns.
            </summary>
            <param name="change">The change.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.RevertSelectionState(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridCellView)">
            <summary>
            Reverts the selection brushes.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.ApplySelectionState(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridCellView)">
            <summary>
            Applies the selection brushes.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.ApplySelectionColors(C1.iOS.Grid.GridCellView,UIKit.UIColor,UIKit.UIColor,System.Boolean)">
            <summary>
            Applies the selection colors to a specific cell.
            </summary>
            <param name="cell">The cell.</param>
            <param name="background">The background.</param>
            <param name="foreground">The foreground.</param>
            <param name="isEditing">if set to <c>true</c> [is editing].</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.CanDragColumn(System.Boolean,System.Int32)">
            <summary>
            Determines whether the column can be dragged.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="column">The index of the column to be dragged.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.CanDropColumn(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Determines whether the <paramref name="from"/> column can dropped at the <paramref name="to"/> position.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="from">The original index of the column.</param>
            <param name="to">The index were the column would be dropped.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.CanDragRow(System.Boolean,System.Int32)">
            <summary>
            Determines whether the row can be dragged.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="row">The index of the row to be dragged.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.CanDropRow(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Determines whether the <paramref name="from"/> row can dropped at the <paramref name="to"/> position.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="from">The original index of the row.</param>
            <param name="to">The index were the row would be dropped.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.DropColumnAsync(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Drops the column from the original index <paramref name="from"/> to the index <paramref name="to"/>.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="from">The original index of the column.</param>
            <param name="to">The index were the column was dropped.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryBase.DropRowAsync(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Drops the row from the original index <paramref name="from"/> to the index <paramref name="to"/>.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="from">The original index of the row.</param>
            <param name="to">The index were the row was dropped.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridCellFactory">
            <summary>
            Implements the functionality to create grid cells dynamically.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellFactory"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactory.GridBase">
            <summary>
            Gets the associated grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactory.Grid">
            <summary>
            Gets the associated grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactory.CellsColumnsCount">
            <summary>
            Gets the number of columns belonging to the cells area.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactory.CellsRowsCount">
            <summary>
            Gets the number of rows belonging to the cells area.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactory.RowHeaderColumnsCount">
            <summary>
            Gets the number of columns belonging to the row headers area.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactory.ColumnHeaderRowsCount">
            <summary>
            Gets the number of rows belonging to the column headers area.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.GetDefaultColumn">
            <summary>
            Gets the default column dimensions.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.GetDefaultRow">
            <summary>
            Gets the default row dimensions.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.GetColumnInfo(System.Boolean,System.Int32)">
            <summary>
            Gets the dimensions for the specified column.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="column">The index of the column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.GetRowInfo(System.Boolean,System.Int32)">
            <summary>
            Gets the dimensions for the specified row.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="row">The index of the row.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.CanSetColumnWidth(System.Boolean,System.Int32)">
            <summary>
            Determines whether the with of a column can be set.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="column">The index of the column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.SetColumnWidth(System.Boolean,System.Int32,System.Double)">
            <summary>
            Sets the width of the specified column.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="column">The index of the column.</param>
            <param name="width">The width of the column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.CanSetRowHeight(System.Boolean,System.Int32)">
            <summary>
            Determines whether the height of the row can be set.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="row">The index of the row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.SetRowHeight(System.Boolean,System.Int32,System.Double)">
            <summary>
            Sets the height of the row.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="row">The index of the row.</param>
            <param name="height">The height of the row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.SaveDesiredCellSize(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Returns whether the desired size for a specific cell is taken into account.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.PrepareCell(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridCellView)">
            <summary>
            Prepares the cell to be shown.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.GetCellContentType(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a key that defines the type of cell content.
            </summary>
            <remarks>
            If null is returned, the cell will not be recycled, therefore the <see cref="M:C1.iOS.Grid.GridCellFactory.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)"/> method will be called for every rendered cell.
            Notice this will affect the performance negatively.
            </remarks>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <returns>The returned object will be used as a key to recycle cell content´s</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)">
            <summary>
            Creates the content of the cell.
            </summary>
            <remarks>The actual data is set in the BindCellContent method.</remarks>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContentType">Type of the cell content.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.BindCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,UIKit.UIView)">
            <summary>
            Binds the content of the cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContent">Content of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.UnbindCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,UIKit.UIView)">
            <summary>
            Unbinds the content of the cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContent">Content of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.GetCellText(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets the text representing the content of a cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.SetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)">
            <summary>
            Sets the value of a specified cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="value">The value to be set in the cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.AllowEditing(C1.iOS.Grid.GridCellRange)">
            <summary>
            Returns true when the cell in the specified range can be edited.
            </summary>
            <param name="range">The range of the cell being edited.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.CreateCellEditor(C1.iOS.Grid.GridCellRange)">
            <summary>
            Creates the cell editor.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.OnEditEnded(C1.iOS.Grid.GridCellRange,UIKit.UIView,System.Boolean)">
            <summary>
            Called when the editing of a cell ended.
            </summary>
            <param name="range">The range that was edited.</param>
            <param name="editor">The editor.</param>
            <param name="editCancelled"><c>true</c> if the editing was cancelled.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.CanDragColumn(System.Boolean,System.Int32)">
            <summary>
            Determines whether the column can be drag.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="column">The index of the column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.CanDropColumn(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Determines whether a column can be dragged to the specified position.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="from">The original position of the dragged column.</param>
            <param name="to">The position where the column is dropped.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.CanDragRow(System.Boolean,System.Int32)">
            <summary>
            Determines whether the row can be drag.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="row">The index of the row.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.CanDropRow(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Determines whether a row can be dragged to the specified position.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="from">The original position of the dragged row.</param>
            <param name="to">The position where the row is dropped.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.DropColumnAsync(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Drops the column from the original index <paramref name="from"/> to the index <paramref name="to"/>.
            </summary>
            <param name="isHeader">True if the column belongs to the headers area.</param>
            <param name="from">The original index of the column.</param>
            <param name="to">The index were the column was dropped.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactory.DropRowAsync(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Drops the row from the original index <paramref name="from"/> to the index <paramref name="to"/>.
            </summary>
            <param name="isHeader">True if the row belongs to the headers area.</param>
            <param name="from">The original index of the row.</param>
            <param name="to">The index were the row was dropped.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridWrapCellFactory">
            <summary>
            This cell factory can be used to add features over an existing cell factory, for scenarios where inheriting is not allowed.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.#ctor(C1.iOS.Grid.GridCellFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridWrapCellFactory"/> class.
            </summary>
            <param name="cellFactory">The cell factory.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridWrapCellFactory.InnerFactory">
            <summary>
            Gets the inner cell factory.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridWrapCellFactory.Grid">
            <summary>
            Gets the associated grid.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.Contains(C1.iOS.Grid.GridCellFactoryBase)">
            <summary>
            Returns true if the specified <paramref name="cellFactory"/> is the same instance as this or if it is one of the nested cell factories.
            </summary>
            <param name="cellFactory"></param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.PrepareCell(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridCellView)">
            <summary>
            Prepares the cell to be shown.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.GetCellContentType(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a key that defines the type of cell content.
            </summary>
            <remarks>
            If null is returned, the cell will not be recycled, therefore the <see cref="M:C1.iOS.Grid.GridWrapCellFactory.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)"/> method will be called for every rendered cell.
            Notice this will affect the performance negatively.
            </remarks>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <returns>The returned object will be used as a key to recycle cell content´s</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,System.Object)">
            <summary>
            Creates the content of the cell.
            </summary>
            <remarks>The actual data is set in the BindCellContent method.</remarks>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContentType">Type of the cell content.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.BindCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,UIKit.UIView)">
            <summary>
            Binds the content of the cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContent">Content of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.UnbindCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange,UIKit.UIView)">
            <summary>
            Unbinds the content of the cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range.</param>
            <param name="cellContent">Content of the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.AllowEditing(C1.iOS.Grid.GridCellRange)">
            <summary>
            Returns true when the cell in the specified range can be edited.
            </summary>
            <param name="range">The range of the cell being edited.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.CreateCellEditor(C1.iOS.Grid.GridCellRange)">
            <summary>
            Creates the cell editor.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridWrapCellFactory.OnEditEnded(C1.iOS.Grid.GridCellRange,UIKit.UIView,System.Boolean)">
            <summary>
            Called when the editing of a cell ended.
            </summary>
            <param name="range">The range that was edited.</param>
            <param name="editor">The editor.</param>
            <param name="editCancelled"><c>true</c> if the editing was cancelled.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:C1.iOS.Grid.GridCellFactoryNotifyChange">
            <summary>
            Contains information about changes that occurred in the grid and are notified to the cell factory.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryNotifyChange.Action">
            <summary>
            Gets the action that caused the event.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryNotifyChange.IsHeader">
            <summary>
            Gets whether the indexes belong to headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryNotifyChange.IsVisible">
            <summary>
            Gets a value indicating how the visibility change was toggled.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryNotifyChange.IsAnimated">
            <summary>
            Gets whether this change should be animated.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryNotifyChange.NewItemsCount">
            <summary>
            Gets the number of new items.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryNotifyChange.NewStartingIndex">
            <summary>
            Gets the index at which the change occurred.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryNotifyChange.OldItemsCount">
            <summary>
            Gets the number of old items.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellFactoryNotifyChange.OldStartingIndex">
            <summary>
            Gets the index at which a Move, Remove, or Replace action occurred.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryNotifyChange.CreateAddChange(System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates the add change.
            </summary>
            <param name="isHeader">The change belongs to a header.</param>
            <param name="newStartingIndex">New index of the starting.</param>
            <param name="count">The count.</param>
            <param name="isAnimated">Whether the change should be animated.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryNotifyChange.CreateRemoveChange(System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates the remove change.
            </summary>
            <param name="isHeader">The change belongs to a header.</param>
            <param name="oldStartingIndex">Index of the removed item.</param>
            <param name="count">The count.</param>
            <param name="isAnimated">Whether the change should be animated.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryNotifyChange.CreateReplaceChange(System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the replace change.
            </summary>
            <param name="isHeader">The change belongs to a header.</param>
            <param name="startingIndex">The index of the replaced items.</param>
            <param name="oldItemsCount">The number of replaced items.</param>
            <param name="newItemsCount">The number of items that replace the original ones.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryNotifyChange.CreateMoveChange(System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates the move change.
            </summary>
            <param name="isHeader">The change belongs to a header.</param>
            <param name="oldStartingIndex">Index of the moved item.</param>
            <param name="newStartingIndex">New index of the moved item.</param>
            <param name="count">The number of items moved.</param>
            <param name="isAnimated">Whether the change should be animated.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryNotifyChange.CreateResetChange(System.Boolean)">
            <summary>
            Creates the reset change.
            </summary>
            <param name="isHeader">The change belongs to a header.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellFactoryNotifyChange.CreateVisibilityChange(System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a visibility change.
            </summary>
            <param name="isHeader">The change belongs to a header.</param>
            <param name="startingIndex"></param>
            <param name="count"></param>
            <param name="isVisible"></param>
            <param name="isAnimated">Whether the change should be animated.</param>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridCellFactoryNotifyChangeAction">
            <summary>
            Describes the action that caused a <see cref="T:C1.iOS.Grid.GridCellFactoryNotifyChange"/> event.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellFactoryNotifyChangeAction.Add">
            <summary>
            An item was added to the collection.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellFactoryNotifyChangeAction.Remove">
            <summary>
            An item was removed from the collection. 
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellFactoryNotifyChangeAction.Replace">
            <summary>
            An item was replaced in the collection.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellFactoryNotifyChangeAction.Move">
            <summary>
            An item was moved within the collection.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellFactoryNotifyChangeAction.Reset">
            <summary>
            The content of the collection was cleared.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellFactoryNotifyChangeAction.Visibility">
            <summary>
            The visibility of one or more items changed.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridCellFactoryNotifyChangeAction.Dimension">
            <summary>
            The dimension of one of the items changed.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridCellRange">
            <summary>
            Defines a cell range from (row1,col1) to (row2,col2).
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellRange"/> class.
            </summary>
            <param name="row">The row.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellRange"/> class.
            </summary>
            <param name="row1">The upper row.</param>
            <param name="col1">The left most column.</param>
            <param name="row2">The bottom row.</param>
            <param name="col2">The right most column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.#ctor(C1.iOS.Grid.GridCellRange)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellRange"/> class.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridCellRange.Column">
            <summary>
            Gets or sets the left most column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellRange.Row">
            <summary>
            Gets or sets the upper row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellRange.Column2">
            <summary>
            Gets or sets the right most column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellRange.Row2">
            <summary>
            Gets or sets the bottom row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellRange.IsSingleCell">
            <summary>
            Gets a value that indicates whether this range contains a single cell.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellRange.Cells">
            <summary>
            Gets the cells in this range.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.Intersects(C1.iOS.Grid.GridCellRange)">
            <summary>
            Returns true if the ranges intersect.
            </summary>
            <param name="range">the range to compare against.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.Contains(C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a value that indicates whether this range contains another range.
            </summary>
            <param name="rng"><see cref="T:C1.iOS.Grid.GridCellRange"/> that may be contained within this range.</param>
            <returns>True if this range contains the range specified by the <paramref name="rng"/> parameter.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.Contains(System.Int32,System.Int32)">
            <summary>
            Gets a value that indicates whether this range contains a given cell.
            </summary>
            <param name="row">Index of the row that may be contained in this range.</param>
            <param name="col">Index of the column that may be contained in this range.</param>
            <returns>True if this range contains the cell specified by the <paramref name="row"/> and <paramref name="col"/> parameters.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.ContainsRow(System.Int32)">
            <summary>
            Gets a value that indicates whether this range contains a given row.
            </summary>
            <param name="row">Index of the row that may be contained in this range.</param>
            <returns>True if this range contains the row specified by the <paramref name="row"/> parameter.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.ContainsColumn(System.Int32)">
            <summary>
            Gets a value that indicates whether this range contains a given column.
            </summary>
            <param name="col">Index of the column that may be contained in this range.</param>
            <returns>True if this range contains the column specified by the <paramref name="col"/> parameter.</returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.op_Equality(C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridCellRange)">
            <summary>
            Equality operator for <see cref="T:C1.iOS.Grid.GridCellRange"/> objects.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellRange.op_Inequality(C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridCellRange)">
            <summary>
            Inequality operator for <see cref="T:C1.iOS.Grid.GridCellRange"/> objects.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridKeyboardHandlerBase.NavigatePageUpDown(System.Int32,System.Boolean)">
            <summary>
            Navigates selection, and viewport in corresponding to PageUp/Down
            </summary>
            <param name="deltaY">The number of rows to navigate</param>
            <param name="shift">Whether shift button is pressed</param>
        </member>
        <member name="M:C1.iOS.Grid.GridKeyboardHandlerBase.SumRows(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sums a delta number of rows skipping invisible rows and merged ranges.
            </summary>
            <param name="row">The column.</param>
            <param name="column">The column.</param>
            <param name="delta">The delta.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridKeyboardHandlerBase.SumColumns(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sums a delta number of columns skipping invisible columns and merged ranges.
            </summary>
            <param name="row">The column.</param>
            <param name="column">The column.</param>
            <param name="delta">The delta.</param>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridLength">
            <summary>
            Used to define the size of the columns of <see cref="T:C1.iOS.Grid.FlexGrid"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridLength" /> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.#ctor(System.Double,C1.iOS.Grid.GridUnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridLength" /> struct.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridLength.Auto">
            <summary>
            A ready to reuse GridLength of GridUnitType.Auto.
            </summary>
            <remarks>
            Value has no meaning for GridLength of type GridUnitType.Auto.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridLength.Star">
            <summary>
            A ready to reuse GridLength of GridUnitType.Star with a Value of 1.
            </summary>
            <remarks>
            If a Value other than 1 is needed with GridUnitType.Star, then use the constructor GridLength (value, GridUnitType.Star).
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridLength.GridUnitType">
            <summary>
            Gets the GridUnitType of the GridLength
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridLength.IsAbsolute">
            <summary>
            Gets whether or not the GridUnitType of the GridLength is GridUnitType.Absolute.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridLength.IsAuto">
            <summary>
            Gets whether or not the GridUnitType of the GridLength is GridUnitType.Auto.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridLength.IsStar">
            <summary>
            Gets a value that indicates whether the GridUnitType of the GridLength is GridUnitType.Star.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridLength.Value">
            <summary>
            Gets the Value of the GridLength.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.op_Implicit(System.Double)~C1.iOS.Grid.GridLength">
            <summary>
            Casting operator to convert a double into a GridLength of type GridUnitType.Absolute.
            </summary>
            <param name="absoluteValue">The absolute size.</param>
            <returns>
            A GridLength of type GridUnitType.Absolute and of size absolute size.
            </returns>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.op_Implicit(System.String)~C1.iOS.Grid.GridLength">
            <summary>
            Casting operator to convert a string into a GridLength.
            </summary>
            <param name="lengthString">The string specifying a length.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.Parse(System.String)">
            <summary>
            Parses a string into a <see cref="T:C1.iOS.Grid.GridLength"/>.
            </summary>
            <param name="lengthString">The string to be parsed.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridLength.op_Addition(C1.iOS.Grid.GridLength,C1.iOS.Grid.GridLength)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="l1">The l1.</param>
            <param name="l2">The l2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:C1.iOS.Grid.GridUnitType">
            <summary>
            Enumerates values that control how the GridLength.Value property is interpreted for row and column definitions.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridUnitType.Absolute">
            <summary>
            Interpret the GridLength.Value property value as the number of device-specific units.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridUnitType.Star">
            <summary>
            Interpret the GridLength.Value property value as a proportional weight, to be laid out after rows and columns with GridUnitType.Absolute or GridUnitType.Auto are accounted for.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridUnitType.Auto">
            <summary>
            Ignore the GridLength.Value property value and choose a size that fits the children of the row or column.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridMergeManagerBase">
            <summary>
            Implements the grid's default merging behavior.
            </summary>
            <remarks>
            An instance of this class is automatically created and assigned to the grid's 
            <see cref="P:C1.iOS.Grid.FlexGrid.MergeManager"/> property to implement the grid's default
            merging behavior.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridMergeManagerBase.Grid">
            <summary>
            Gets the associated grid.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridMergeManagerBase.GetMergedRange(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridCellRange" /> that specifies the merged extent of a cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range of the original cell.</param>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridMergeManager">
            <summary>
            Implements the grid's default merging behavior.
            </summary>
            <remarks>
            An instance of this class is automatically created and assigned to the grid's 
            <see cref="P:C1.iOS.Grid.FlexGrid.MergeManager"/> property to implement the grid's default
            merging behavior.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridMergeManager.Grid">
            <summary>
            Gets the associated grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridMergeManager.AllowMerging">
            <summary>
            Gets a value indicating whether merging is allowed.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridMergeManager.GetMergedRange(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridCellRange" /> that specifies the merged extent of a cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The range of the original cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridMergeManager.GetMergedRange(C1.iOS.Grid.GridPanel,C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridCellRange,System.Boolean,System.Boolean)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridCellRange" /> that specifies the merged extent of a cell.
            </summary>
            <param name="panel">The panel to be merged.</param>
            <param name="extentRange">The range which limits the zone to look for.</param>
            <param name="range">The range inside the panel.</param>
            <param name="vertical">if set to <c>true</c> the merge will be performed vertically, otherwise horizontally.</param>
            <param name="expand">if set to <c>true</c> the merge algorithm can expand to adjacent columns or rows depending on the direction.</param>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridPanel">
            <summary>
            Represents a panel of the grid. Each panel is related to a <see cref="T:C1.iOS.Grid.GridCellType"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridPanel.#ctor(C1.iOS.Grid.FlexGrid,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridRowCollection,C1.iOS.Grid.GridColumnCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridPanel"/> class.
            </summary>
            <param name="grid">The grid.</param>
            <param name="cellType">Type of the cell.</param>
            <param name="rows">The rows.</param>
            <param name="columns">The columns.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.Grid">
            <summary>
            Gets the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.CellType">
            <summary>
            Gets the type of the cell of this panel.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.Rows">
            <summary>
            Gets the collection of rows of this panel.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.Columns">
            <summary>
            Gets the collection of columns of this panel.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.Item(C1.iOS.Grid.GridRow,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets or sets the value of the cell specified by its row and column.
            </summary>
            <param name="row">The row.</param>
            <param name="col">The column.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the value of the cell specified by its <paramref name="row"/> and <paramref name="col"/>.
            </summary>
            <param name="row">The row.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridPanel.GetCellText(System.Int32,System.Int32)">
            <summary>
            Gets the text corresponding to the cell in the specified <paramref name="row"/> and <paramref name="col"/>.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridPanel.GetCellText(C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets the text corresponding to the cell in the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridPanel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.ViewRange">
            <summary>
            Gets the visible range of this panel.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.DisplayRange">
            <summary>
            Gets the range of this panel.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.FrozenColumns">
            <summary>
            Gets the number of frozen columns in this panel.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridPanel.FrozenRows">
            <summary>
            Gets the number of frozen rows in this panel.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.Resources.GridResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.Resources.GridResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.Resources.GridResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.Resources.GridResource.Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.Resources.GridResource.Cut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.Resources.GridResource.Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.Resources.GridResource.Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.Resources.GridResource.SelectAll">
            <summary>
              Looks up a localized string similar to Select All.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.Resources.GridResource.Undo">
            <summary>
              Looks up a localized string similar to Undo.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridBoundRow">
            <summary>
            Represents a row that is bound to a data item.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBoundRow.#ctor(C1.DataCollection.IDataCollection{System.Object},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridBoundRow"/> class.
            </summary>
            <param name="collection">The collection containing the item.</param>
            <param name="dataIndex">Index of the data inside the collection.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridBoundRow.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridBoundRow"/> class.
            </summary>
            <param name="dataItem">The data item.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridBoundRow.DataCollection">
            <summary>
            Gets the collection to which the bound item belongs to.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBoundRow.DataIndex">
            <summary>
            Gets the index of the data inside the collection of items.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridBoundRow.DataItem">
            <summary>
            Gets the data item.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBoundRow.OnAttached">
            <summary>
            Called when the row is attached to a collection of rows.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridBoundRow.OnDetached">
            <summary>
            Called when the row is detached from a collection of rows.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridGroupRow">
            <summary>
            Represents rows that defines group of data items.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridGroupRow"/> class.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.#ctor(C1.DataCollection.IDataCollectionGroup{System.Object,System.Object},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridGroupRow"/> class.
            </summary>
            <param name="group">The group item.</param>
            <param name="index">The index of the group inside the collection of groups.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRow.DataItem">
            <summary>
            Gets the data item.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRow.DataIndex">
            <summary>
            Gets the index of the data inside the collection of items.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRow.GroupName">
            <summary>
            Gets the header of the column associated with this group.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRow.GroupText">
            <summary>
            Gets the a string representing the group item.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRow.ItemsCount">
            <summary>
            Gets the number of data items in this group.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRow.IsCollapsed">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:C1.iOS.Grid.GridGroupRow"/> is collapsed (child rows are hidden) or expanded (child rows are visible).
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridGroupRow.GroupRowPosition">
            <summary>
            Gets or sets the position of the group row.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.PrepareCell(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn,C1.iOS.Grid.GridCellView)">
            <summary>
            Prepares the cell to be shown.
            </summary>
            <param name="cellType">The kind of cell.</param>
            <param name="col">The column that determines the cell.</param>
            <param name="cell">The cell element.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.GetCellContentType(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the type of the cell content.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn,System.Object)">
            <summary>
            Creates the content of the cell for the specified column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
            <param name="cellContentType">Type of the cell content.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.BindCellContent(UIKit.UIView,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Binds the content of the cell for the specified column.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="cellType">Type of the cell.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.UnbindCellContent(UIKit.UIView,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Unbinds the content of the cell for the specified column.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.AllowEditing(C1.iOS.Grid.GridColumn)">
            <summary>
            Returns true when the cell in the intersection of the specified column and this row can be edited.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.GetMergedRange(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridCellRange" /> that specifies the merged extent of a cell.
            </summary>
            <param name="cellType">Type of the cell.</param>
            <param name="range">The original cell range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.GetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the value corresponding to the cell in the intersection of the specified column and this row.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="column">The column that determines the cell.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridGroupRow.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridIncrementalLoadingRow">
            <summary>
            This row is displayed at the bottom of the grid and is used to bring more items when the inner collection view support <see cref="T:C1.DataCollection.ISupportIncrementalLoading"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridIncrementalLoadingRow.IsLoading">
            <summary>
            Gets or sets a value indicating whether the loading activity indicator is displayed.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridNewRow">
            <summary>
            Represents a row used to enter new records in the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridNewRow.DataItem">
            <summary>
            Gets the data item.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridNewRow.Placeholder">
            <summary>
            Gets or sets the message displayed in the row when it is not entering data.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridNewRow.PrepareCell(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn,C1.iOS.Grid.GridCellView)">
            <summary>
            Prepares the cell to be shown.
            </summary>
            <param name="cellType">The kind of cell.</param>
            <param name="col">The column that determines the cell.</param>
            <param name="cell">The cell element.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridNewRow.GetCellContentType(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the type of the cell content.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridNewRow.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn,System.Object)">
            <summary>
            Creates the content of the cell for the specified column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
            <param name="cellContentType">Type of the cell content.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridNewRow.BindCellContent(UIKit.UIView,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Binds the content of the cell for the specified column.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridNewRow.GetMergedRange(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridCellRange" /> that specifies the merged extent of a cell.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="range">The original cell range.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridNewRow.AllowEditing(C1.iOS.Grid.GridColumn)">
            <summary>
            Returns true when the cell in the intersection of the specified column and this row can be edited.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="T:C1.iOS.Grid.GridRow">
            <summary>
            Represent a row.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridRow"/> class.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.OnAttached">
            <summary>
            Called when the row is attached to a collection of rows.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.OnDetached">
            <summary>
            Called when the row is detached from a collection of rows.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.Grid">
            <summary>
            Gets the grid containing this row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.Rows">
            <summary>
            Gets the collection of rows containing this row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.DataItem">
            <summary>
            Gets the data item.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.IsVisible">
            <summary>
            Gets or sets a value indicating whether the row is visible and not collapsed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.Parent">
            <summary>
            Gets the parent group row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.Level">
            <summary>
            Gets or sets the nesting level inside a group. This is zero if no grouping is used.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.Height">
            <summary>
            Gets or sets the height of the row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.MinHeight">
            <summary>
            Gets or sets the minimum height of the row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.MaxHeight">
            <summary>
            Gets or sets the maximum height of the row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.AllowResizing">
            <summary>
            Gets or sets a value indicating whether this row can be resized.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.AllowDragging">
            <summary>
            Gets or sets a value indicating whether this row can be dragged.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.ActualHeight">
            <summary>
            Gets the actual height of the row in pixels.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.ActualVisible">
            <summary>
            Gets a value indicating whether the row is visible. The row could be collapsed either because the <see cref="P:C1.iOS.Grid.GridRow.IsVisible"/> was set to false or the <see cref="P:C1.iOS.Grid.GridRow.Parent"/> is collapsed.
            </summary>
            <remarks>
            This property is read-only. To change the visibility of a row use the <see cref="P:C1.iOS.Grid.GridRow.IsVisible"/> property instead.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.AllowMerging">
            <summary>
            Gets or sets a value that indicates whether cells in this row can be merged.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether this row is read only.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> used to paint the background
            of cells in this row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.TextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> used to paint the foreground
            of cells in this row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.HeaderBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> used to paint the background
            of header cells in this row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.HeaderTextColor">
            <summary>
            Gets or sets the <see cref="T:UIKit.UIColor"/> used to paint the foreground
            of header cells in this row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRow.WordWrap">
            <summary>
            Gets or sets a value indicating whether cells in the row wrap their content.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.PrepareCell(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn,C1.iOS.Grid.GridCellView)">
            <summary>
            Prepares the cell to be shown.
            </summary>
            <param name="cellType">The kind of cell.</param>
            <param name="col">The column that determines the cell.</param>
            <param name="cell">The cell element.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.GetCellContentType(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the type of the cell content.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.CreateCellContent(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn,System.Object)">
            <summary>
            Creates the content of the cell for the specified column.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
            <param name="cellContentType">Type of the cell content.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.BindCellContent(UIKit.UIView,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Binds the content of the cell for the specified column.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.UnbindCellContent(UIKit.UIView,C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Unbinds the content of the cell for the specified column.
            </summary>
            <param name="cellContent">Content of the cell.</param>
            <param name="cellType">The type of cell.</param>
            <param name="col">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.GetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the value corresponding to the cell in the intersection of the specified column and this row.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="column">The column that determines the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.GetCellText(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn)">
            <summary>
            Gets the text corresponding to the cell in the intersection of the specified column and this row.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="column">The column that determines the cell.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.SetCellValue(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridColumn,System.Object)">
            <summary>
            Sets the value corresponding to the cell in the intersection of the specified column and this row.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="column">The column that determines the cell.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.GetMergedRange(C1.iOS.Grid.GridCellType,C1.iOS.Grid.GridCellRange)">
            <summary>
            Gets a <see cref="T:C1.iOS.Grid.GridCellRange"/> that specifies the merged extent of a cell.
            </summary>
            <param name="cellType">The type of cell.</param>
            <param name="range">The original cell range.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.AllowEditing(C1.iOS.Grid.GridColumn)">
            <summary>
            Returns true when the cell in the intersection of the specified column and this row can be edited.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.CreateCellEditor(C1.iOS.Grid.GridColumn)">
            <summary>
            Creates the cell editor.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.GetEditorValue(C1.iOS.Grid.GridColumn,UIKit.UIView)">
            <summary>
            Gets the editor value.
            </summary>
            <param name="column">The column.</param>
            <param name="editor">The editor.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridRow.OnEditEnded(C1.iOS.Grid.GridCellRange,C1.iOS.Grid.GridColumn,UIKit.UIView,System.Boolean)">
            <summary>
            Called before the cell ends editing.
            </summary>
            <param name="range">The range that is being edited.</param>
            <param name="column">The column that is being edited.</param>
            <param name="editor">The editor</param>
            <param name="editCancelled">Whether the edit was cancelled or not.</param>
        </member>
        <member name="T:C1.iOS.Grid.GridCellsPanel">
            <summary>
            Panel that renders the cells in a grid according to the properties <see cref="P:C1.iOS.Grid.GridCellsPanel.DisplayRange"/> and <see cref="P:C1.iOS.Grid.GridCellsPanel.Viewport"/>.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.CellHolder.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.#ctor(C1.iOS.Grid.GridBase)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellsPanel"/> class.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.Grid">
            <summary>
            Gets the associated grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.DisplayRange">
            <summary>
            Gets the range of cells that will be displayed in this panel.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.Viewport">
            <summary>
            Gets the visible rectangle expressed in pixels. Notice the cells out of this area won't be created despite they are in the <see cref="P:C1.iOS.Grid.GridCellsPanel.DisplayRange"/>.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.CellFactory">
            <summary>
            Gets the associated cell factory.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.MergeManager">
            <summary>
            Gets the associated merge manager.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.IsReadOnly">
            <summary>
            Gets or sets whether the cells show the editor.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.SaveCellsDesiredSize">
            <summary>
            Gets or sets whether the cells desired size is saved.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.ApplySelection">
            <summary>
            Gets or sets whether the selection will be applied in the rendered cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridCellsPanel.MergingRange">
            <summary>
            Gets or sets the range used limit the cells after the merging.
            </summary>
            <remarks>
            If not specified, <see cref="P:C1.iOS.Grid.GridCellsPanel.DisplayRange"/> will be used instead.
            </remarks>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.Rebind(C1.iOS.Grid.GridCellsPanelRange)">
            <summary>
            Forces the cells in the specified range to be bind again.
            Unlike <see cref="M:C1.iOS.Grid.GridCellsPanel.Refresh(C1.iOS.Grid.GridCellsPanelRange)"/> it doesn't recycle the cell, it just re-bind it.
            </summary>
            <remarks>
            This method is useful for the selection and cursor changes because it updates the brushes, but it doesn't force the cell to be recycled.
            </remarks>
            <param name="range">The range.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.Freeze(C1.iOS.Grid.GridCellsPanelRange)">
            <summary>
            Freezes the cells in the specified range and forces the panel to be laid out again.
            </summary>
            <param name="rng">The range to be frozen.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.Unfreeze">
            <summary>
            Unfreezes all the frozen cells.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.Refresh(C1.iOS.Grid.GridCellsPanelRange)">
            <summary>
            Recycle the cells in the specified range and forces the panel to be laid out again.
            </summary>
            <param name="rng">The range to be refreshed.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.MoveRows(C1.iOS.Grid.GridCellsPanelRange,System.Int32)">
            <summary>
            Moves the cells in the specified <paramref name="range"/> the number of rows specified in <paramref name="count"/>.
            </summary>
            <param name="range">The range which determines the scope of this operation.</param>
            <param name="count">The number of rows to be moved.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.MoveColumns(C1.iOS.Grid.GridCellsPanelRange,System.Int32)">
            <summary>
            Moves the cells in the specified <paramref name="range"/> the number of columns specified in <paramref name="count"/>.
            </summary>
            <param name="range">The range which determines the scope of this operation.</param>
            <param name="count">The number of columns to be moved.</param>
        </member>
        <member name="M:C1.iOS.Grid.GridCellsPanel.Dispose(System.Boolean)">
            <summary>
            Release resource
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:C1.iOS.Grid.GridCellView">
            <summary>
            Contains properties that will be applied to cell view elements.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridCellView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridCellView"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridManipulationLayer.IsDisposed">
            <summary>
            Indicates whether the <see cref="M:C1.iOS.Grid.GridManipulationLayer.Dispose(System.Boolean)"/> method was called.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridManipulationLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the UIView object.
            </summary>
            <param name="disposing">If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</param>
            <remarks>
            <para>This Dispose method releases the resources used by the UIView class.</para>
            <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
            <para>Calling the Dispose method when the application is finished using the UIView ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
            <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
            </remarks>
        </member>
        <member name="T:C1.iOS.Grid.GridRowColumnView">
            <summary>
            Visual representation of a column or row.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridRowColumnView.InitializeUI(C1.iOS.Grid.GridBase)">
            <summary>
            Initializes the UI.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColumnView.HeadersPanel">
            <summary>
            Gets the panel that contains the headers.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColumnView.CellsPanel">
            <summary>
            Gets the panel that contains the cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColumnView.IsColumn">
            <summary>
            Gets or sets a value indicating whether this element represent a column or row.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridRowColumnView.CrossOffset">
            <summary>
            Gets or sets the offset of the cells.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridSelectionLayer.Marquee">
            <summary>
            Gets the <see cref="T:C1.iOS.Core.C1Border"/> used to show the Excel-style marquee around 
            the current selection.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridSelectionLayer.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the UIView object.
            </summary>
            <param name="disposing">If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</param>
            <remarks>
            <para>This Dispose method releases the resources used by the UIView class.</para>
            <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
            <para>Calling the Dispose method when the application is finished using the UIView ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
            <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
            </remarks>
        </member>
        <member name="T:C1.iOS.Grid.GridSelectionMenu">
            <summary>
            Grid selection menu.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridSelectionMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridSelectionMenu"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridSelectionMenu.Items">
            <summary>
            Gets the menu items.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridMenuItem">
            <summary>
            Menu item of Grid selection menu.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridMenuItem.#ctor(System.String,System.Func{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridMenuItem"/> class.
            </summary>
        </member>
        <member name="M:C1.iOS.Grid.GridMenuItem.#ctor(System.String,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.iOS.Grid.GridMenuItem"/> class.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridMenuItem.Text">
            <summary>
            Gets or sets the text that is shown.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridMenuItem.Clicking">
            <summary>
            Gets or sets the item clicking action.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridMenuItemIcon">
            <summary>
            Specifies a value that defines menu icon.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridMenuItemIcon.None">
            <summary>
            No icon.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridMenuItemIcon.SelectAll">
            <summary>
            Select all icon.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridMenuItemIcon.Cut">
            <summary>
            Cut icon.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridMenuItemIcon.Copy">
            <summary>
            Copy icon.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridMenuItemIcon.Paste">
            <summary>
            Paste icon.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridMenuItemIcon.Delete">
            <summary>
            Delete icon.
            </summary>
        </member>
        <member name="F:C1.iOS.Grid.GridMenuItemIcon.Undo">
            <summary>
            The undo icon.
            </summary>
        </member>
        <member name="T:C1.iOS.Grid.GridFilterRow">
            <summary>
            Represents a row whose cells are text boxes used to filter the corresponding column.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridFilterRow.MatchCase">
            <summary>
            Gets or sets whether the filtered text should match the case too.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridFilterRow.MatchWholeWord">
            <summary>
            Gets or sets whether the filtered text should match the whole word.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridFilterRow.Delay">
            <summary>
            Gets or sets the delay before performing the filtering. 
            </summary>
            <remarks>
            This parameter is useful to avoid early filters when typing a burst of keystrokes.
            </remarks>
        </member>
        <member name="P:C1.iOS.Grid.GridFilterRow.AutoComplete">
            <summary>
            Gets or sets whether the typed text will be auto-completed based on the data in the grid.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridFilterRow.IsFiltering">
            <summary>
            Gets whether a filter operation is being executed.
            </summary>
        </member>
        <member name="P:C1.iOS.Grid.GridFilterRow.Placeholder">
            <summary>
            Gets or sets the placeholder text.
            </summary>
        </member>
    </members>
</doc>
